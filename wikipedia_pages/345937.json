{
    "id": "345937",
    "revid": "7226930",
    "url": "https://en.wikipedia.org/wiki?curid=345937",
    "title": "Database schema",
    "text": "The database schema is its structure described in a &lt;a href=\"formal%20language\"&gt;formal language&lt;/a&gt; supported by the &lt;a href=\"database%20management%20system\"&gt;database management system&lt;/a&gt; (DBMS). The term \"&lt;a href=\"wikt%3Aschema\"&gt;schema&lt;/a&gt;\" refers to the organization of data as a blueprint of how the database is constructed (divided into database tables in the case of &lt;a href=\"relational%20databases\"&gt;relational databases&lt;/a&gt;). The formal definition of a &lt;a href=\"database\"&gt;database&lt;/a&gt; schema is a set of formulas (sentences) called &lt;a href=\"integrity%20constraints\"&gt;integrity constraints&lt;/a&gt; imposed on a database. These integrity constraints ensure compatibility between parts of the schema. All constraints are expressible in the same language. A database can be considered a structure in realization of the &lt;a href=\"database%20language\"&gt;database language&lt;/a&gt;. The states of a created &lt;a href=\"conceptual%20schema\"&gt;conceptual schema&lt;/a&gt; are transformed into an explicit mapping, the database schema. This describes how real-world entities are &lt;a href=\"Data%20modeling\"&gt;modeled&lt;/a&gt; in the database.\n\"A database schema specifies, based on the &lt;a href=\"database%20administrator\"&gt;database administrator&lt;/a&gt;'s knowledge of possible applications, the facts that can enter the database, or those of interest to the possible &lt;a href=\"end-user\"&gt;end-user&lt;/a&gt;s.\" The notion of a database schema plays the same role as the notion of theory in &lt;a href=\"predicate%20calculus\"&gt;predicate calculus&lt;/a&gt;. A model of this \"theory\" closely corresponds to a database, which can be seen at any instant of time as a &lt;a href=\"mathematical%20object\"&gt;mathematical object&lt;/a&gt;. Thus a schema can contain formulas representing &lt;a href=\"Data%20integrity%23Types%20of%20integrity%20constraints\"&gt;integrity constraints&lt;/a&gt; specifically for an application and the constraints specifically for a type of database, all expressed in the same database language. In a &lt;a href=\"relational%20database\"&gt;relational database&lt;/a&gt;, the schema defines the &lt;a href=\"Table%20%28database%29\"&gt;tables&lt;/a&gt;, &lt;a href=\"Field%20%28computer%20science%29\"&gt;fields&lt;/a&gt;, &lt;a href=\"Relational%20model\"&gt;relationship&lt;/a&gt;s, &lt;a href=\"View%20%28database%29\"&gt;view&lt;/a&gt;s, &lt;a href=\"Index%20%28database%29\"&gt;index&lt;/a&gt;es, &lt;a href=\"Software%20package%20%28installation%29\"&gt;package&lt;/a&gt;s, &lt;a href=\"stored%20procedure\"&gt;procedure&lt;/a&gt;s, &lt;a href=\"subroutine\"&gt;function&lt;/a&gt;s, &lt;a href=\"Queue%20%28data%20structure%29\"&gt;queue&lt;/a&gt;s, &lt;a href=\"Database%20trigger\"&gt;trigger&lt;/a&gt;s, &lt;a href=\"Data%20type\"&gt;type&lt;/a&gt;s, &lt;a href=\"sequence\"&gt;sequence&lt;/a&gt;s, &lt;a href=\"materialized%20view\"&gt;materialized view&lt;/a&gt;s, &lt;a href=\"Synonym%20%28database%29\"&gt;synonym&lt;/a&gt;s, database links, &lt;a href=\"Directory%20%28file%20systems%29\"&gt;directories&lt;/a&gt;, &lt;a href=\"XML%20schema\"&gt;XML schema&lt;/a&gt;s, and other elements.\nA database generally stores its schema in a &lt;a href=\"data%20dictionary\"&gt;data dictionary&lt;/a&gt;. Although a schema is defined in text database language, the term is often used to refer to a graphical depiction of the database structure. In other words, schema is the structure of the database that defines the objects in the database.\nIn an &lt;a href=\"Oracle%20Database\"&gt;Oracle Database&lt;/a&gt; system, the term \"schema\" has a slightly different connotation.\nIdeal requirements for schema integration.\nThe requirements listed below influence the detailed structure of schemas that are produced. Certain applications will not require that all of these conditions are met, but these four requirements are the most ideal.\nExample of two schema integrations.\nSuppose we want a mediated schema to &lt;a href=\"data%20integration\"&gt;integrate&lt;/a&gt; two travel databases, Go-travel and Ok-flight.\ncodice_1 has two relations:\nGo-flight(flight-number, time, meal(yes/no))\nGo-price(flight-number, date, price)\ncodice_2 has just one relation:\nOk-flight(flight-number, date, time, price, nonstop(yes/no))\nThe overlapping information in Go-travel\u2019s and Ok-flight\u2019s schemas could be represented in a mediated schema:\nFlight(flight-number, date, time, price)\nOracle database specificity.\nIn the context of &lt;a href=\"Oracle%20Database\"&gt;Oracle Database&lt;/a&gt;s, a schema object is a logical &lt;a href=\"Database%20storage%20structures\"&gt;data storage structure&lt;/a&gt;.\nAn Oracle database associates a separate schema with each database user.\nA schema comprises a collection of schema objects. Examples of schema objects include:\nOn the other hand, non-schema objects may include:\nSchema objects do not have a one-to-one correspondence to physical files on disk that store their information. However, &lt;a href=\"Oracle%20database\"&gt;Oracle database&lt;/a&gt;s store schema objects logically within a &lt;a href=\"tablespace\"&gt;tablespace&lt;/a&gt; of the database. The data of each object is physically contained in one or more of the tablespace's &lt;a href=\"datafile\"&gt;datafile&lt;/a&gt;s. For some objects (such as tables, indexes, and clusters) a &lt;a href=\"database%20administrator\"&gt;database administrator&lt;/a&gt; can specify how much disk space the Oracle &lt;a href=\"RDBMS\"&gt;RDBMS&lt;/a&gt; allocates for the object within the tablespace's datafiles.\nThere is no necessary relationship between schemas and tablespaces: a tablespace can contain objects from different schemas, and the objects for a single schema can reside in different tablespaces. Oracle database specificity does, however, enforce platform recognition of nonhomogenized sequence differentials, which is considered a crucial limiting factor in virtualized applications."
}