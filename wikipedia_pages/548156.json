{
    "id": "548156",
    "revid": "36879710",
    "url": "https://en.wikipedia.org/wiki?curid=548156",
    "title": "State-space representation",
    "text": "In &lt;a href=\"control%20engineering\"&gt;control engineering&lt;/a&gt;, a state-space representation is a mathematical model of a physical system as a set of input, output and state variables related by first-order &lt;a href=\"differential%20equation\"&gt;differential equation&lt;/a&gt;s or &lt;a href=\"difference%20equation\"&gt;difference equation&lt;/a&gt;s. State variables are variables whose values evolve over time in a way that depends on the values they have at any given time and on the externally imposed values of input variables. Output variables\u2019 values depend on the values of the state variables.\nThe \"&lt;a href=\"state%20space\"&gt;state space&lt;/a&gt;\" is the &lt;a href=\"Euclidean%20space\"&gt;Euclidean space&lt;/a&gt; in which the variables on the axes are the state variables. The state of the system can be represented as a \"state vector\" within that space.\nTo abstract from the number of inputs, outputs and states, these variables are expressed as &lt;a href=\"row%20and%20column%20vectors\"&gt;vectors&lt;/a&gt;. \nIf the &lt;a href=\"dynamical%20system\"&gt;dynamical system&lt;/a&gt; is linear, time-invariant, and finite-dimensional, then the differential and &lt;a href=\"algebraic%20equation\"&gt;algebraic equation&lt;/a&gt;s may be written in &lt;a href=\"matrix%20%28mathematics%29\"&gt;matrix&lt;/a&gt; form.\nThe state-space method is characterized by significant algebraization of general &lt;a href=\"system%20theory\"&gt;system theory&lt;/a&gt;, which makes it possible to use Kronecker vector-matrix structures. The capacity of these structures can be efficiently applied to research systems with modulation or without it. \nThe state-space representation (also known as the \"&lt;a href=\"time-domain\"&gt;time-domain&lt;/a&gt; approach\") provides a convenient and compact way to model and analyze systems with multiple inputs and outputs. With formula_1 inputs and formula_2 outputs, we would otherwise have to write down formula_3 &lt;a href=\"Laplace%20transform\"&gt;Laplace transform&lt;/a&gt;s to encode all the information about a system. Unlike the &lt;a href=\"frequency%20domain\"&gt;frequency domain&lt;/a&gt; approach, the use of the state-space representation is not limited to systems with linear components and zero initial conditions.\nThe state-space model can be applied in subjects such as economics, statistics, computer science and electrical engineering, and neuroscience. In &lt;a href=\"econometrics\"&gt;econometrics&lt;/a&gt;, for example, state-space models can be used to decompose a &lt;a href=\"time%20series\"&gt;time series&lt;/a&gt; into trend and cycle, compose individual indicators into a composite index, identify turning points of the business cycle, and estimate GDP using latent and unobserved time series. Many applications rely on the &lt;a href=\"Kalman%20filter\"&gt;Kalman Filter&lt;/a&gt; to produce estimates of the current unknown state variables using their previous observations.\nState variables.\nThe internal &lt;a href=\"state%20variable\"&gt;state variable&lt;/a&gt;s are the smallest possible subset of system variables that can represent the entire state of the system at any given time. The minimum number of state variables required to represent a given system, formula_4, is usually equal to the order of the system's defining differential equation, but not necessarily. If the system is represented in transfer function form, the minimum number of state variables is equal to the order of the transfer function's denominator after it has been reduced to a proper fraction. It is important to understand that converting a state-space realization to a transfer function form may lose some internal information about the system, and may provide a description of a system which is stable, when the state-space realization is unstable at certain points. In electric circuits, the number of state variables is often, though not always, the same as the number of energy storage elements in the circuit such as &lt;a href=\"capacitor\"&gt;capacitor&lt;/a&gt;s and &lt;a href=\"inductor\"&gt;inductor&lt;/a&gt;s. The state variables defined must be linearly independent, i.e., no state variable can be written as a linear combination of the other state variables or the system will not be able to be solved.\nLinear systems.\nThe most general state-space representation of a linear system with formula_1 inputs, formula_2 outputs and formula_4 state variables is written in the following form:\nwhere:\nIn this general formulation, all matrices are allowed to be time-variant (i.e. their elements can depend on time); however, in the common &lt;a href=\"LTI%20system\"&gt;LTI&lt;/a&gt; case, matrices will be time invariant. The time variable formula_26 can be continuous (e.g. formula_27) or discrete (e.g. formula_28). In the latter case, the time variable formula_29 is usually used instead of formula_26. &lt;a href=\"Hybrid%20system\"&gt;Hybrid system&lt;/a&gt;s allow for time domains that have both continuous and discrete parts. Depending on the assumptions made, the state-space model representation can assume the following forms:\nExample: continuous-time LTI case.\nStability and natural response characteristics of a continuous-time &lt;a href=\"LTI%20system\"&gt;LTI system&lt;/a&gt; (i.e., linear with matrices that are constant with respect to time) can be studied from the &lt;a href=\"eigenvalue\"&gt;eigenvalue&lt;/a&gt;s of the matrix formula_31. The stability of a time-invariant state-space model can be determined by looking at the system's &lt;a href=\"transfer%20function\"&gt;transfer function&lt;/a&gt; in factored form. It will then look something like this:\nThe denominator of the transfer function is equal to the &lt;a href=\"characteristic%20polynomial\"&gt;characteristic polynomial&lt;/a&gt; found by taking the &lt;a href=\"determinant\"&gt;determinant&lt;/a&gt; of formula_33,\nThe roots of this polynomial (the &lt;a href=\"eigenvalue\"&gt;eigenvalue&lt;/a&gt;s) are the system transfer function's &lt;a href=\"complex%20pole\"&gt;pole&lt;/a&gt;s (i.e., the &lt;a href=\"Mathematical%20singularity\"&gt;singularities&lt;/a&gt; where the transfer function's magnitude is unbounded). These poles can be used to analyze whether the system is &lt;a href=\"exponential%20stability\"&gt;asymptotically stable&lt;/a&gt; or &lt;a href=\"marginal%20stability\"&gt;marginally stable&lt;/a&gt;. An alternative approach to determining stability, which does not involve calculating eigenvalues, is to analyze the system's &lt;a href=\"Lyapunov%20stability\"&gt;Lyapunov stability&lt;/a&gt;.\nThe zeros found in the numerator of formula_35 can similarly be used to determine whether the system is &lt;a href=\"minimum%20phase\"&gt;minimum phase&lt;/a&gt;.\nThe system may still be input\u2013output stable (see &lt;a href=\"BIBO%20stability\"&gt;BIBO stable&lt;/a&gt;) even though it is not internally stable. This may be the case if unstable poles are canceled out by zeros (i.e., if those singularities in the transfer function are &lt;a href=\"removable%20singularity\"&gt;removable&lt;/a&gt;).\nControllability.\nThe state controllability condition implies that it is possible\u00a0\u2013 by admissible inputs\u00a0\u2013 to steer the states from any initial value to any final value within some finite time window. A continuous time-invariant linear state-space model is controllable &lt;a href=\"iff\"&gt;if and only if&lt;/a&gt;\nwhere &lt;a href=\"rank%20%28linear%20algebra%29\"&gt;rank&lt;/a&gt; is the number of linearly independent rows in a matrix, and where \"n\" is the number of state variables.\nObservability.\nObservability is a measure for how well internal states of a system can be inferred by knowledge of its external outputs. The observability and controllability of a system are mathematical duals (i.e., as controllability provides that an input is available that brings any initial state to any desired final state, observability provides that knowing an output trajectory provides enough information to predict the initial state of the system).\nA continuous time-invariant linear state-space model is observable if and only if\nTransfer function.\nThe \"&lt;a href=\"transfer%20function\"&gt;transfer function&lt;/a&gt;\" of a continuous time-invariant linear state-space model can be derived in the following way:\nFirst, taking the &lt;a href=\"Laplace%20transform\"&gt;Laplace transform&lt;/a&gt; of \nyields\nNext, we simplify for formula_40, giving\nand thus\nSubstituting for formula_40 in the output equation\ngiving\nAssuming zero initial conditions formula_46 and a &lt;a href=\"Single-input%20single-output%20system\"&gt;single-input single-output (SISO) system&lt;/a&gt;, the &lt;a href=\"transfer%20function\"&gt;transfer function&lt;/a&gt; is defined as the ratio of output and input formula_47. For a &lt;a href=\"MIMO\"&gt;multiple-input multiple-output (MIMO) system&lt;/a&gt;, however, this ratio is not defined. Therefore, assuming zero initial conditions, the &lt;a href=\"transfer%20function%20matrix\"&gt;transfer function matrix&lt;/a&gt; is derived from\nusing the method of equating the coefficients which yields\nConsequently, formula_50 is a matrix with the dimension formula_3 which contains transfer functions for each input output combination. Due to the simplicity of this matrix notation, the state-space representation is commonly used for multiple-input, multiple-output systems. The &lt;a href=\"Rosenbrock%20system%20matrix\"&gt;Rosenbrock system matrix&lt;/a&gt; provides a bridge between the state-space representation and its &lt;a href=\"transfer%20function\"&gt;transfer function&lt;/a&gt;.\nCanonical realizations.\nAny given transfer function which is &lt;a href=\"strictly%20proper\"&gt;strictly proper&lt;/a&gt; can easily be transferred into state-space by the following approach (this example is for a 4-dimensional, single-input, single-output system):\nGiven a transfer function, expand it to reveal all coefficients in both the numerator and denominator. This should result in the following form:\nThe coefficients can now be inserted directly into the state-space model by the following approach:\nThis state-space realization is called controllable canonical form because the resulting model is guaranteed to be controllable (i.e., because the control enters a chain of integrators, it has the ability to move every state).\nThe transfer function coefficients can also be used to construct another type of canonical form\nThis state-space realization is called observable canonical form because the resulting model is guaranteed to be observable (i.e., because the output exits from a chain of integrators, every state has an effect on the output).\nProper transfer functions.\nTransfer functions which are only &lt;a href=\"proper%20transfer%20function\"&gt;proper&lt;/a&gt; (and not &lt;a href=\"strictly%20proper\"&gt;strictly proper&lt;/a&gt;) can also be realised quite easily. The trick here is to separate the transfer function into two parts: a strictly proper part and a constant. \nThe strictly proper transfer function can then be transformed into a canonical state-space realization using techniques shown above. The state-space realization of the constant is trivially formula_58. Together we then get a state-space realization with matrices \"A\", \"B\" and \"C\" determined by the strictly proper part, and matrix \"D\" determined by the constant.\nHere is an example to clear things up a bit:\nwhich yields the following controllable realization\nNotice how the output also depends directly on the input. This is due to the formula_62 constant in the transfer function.\nFeedback.\nA common method for feedback is to multiply the output by a matrix \"K\" and setting this as the input to the system: formula_63.\nSince the values of \"K\" are unrestricted the values can easily be negated for &lt;a href=\"negative%20feedback\"&gt;negative feedback&lt;/a&gt;.\nThe presence of a negative sign (the common notation) is merely a notational one and its absence has no impact on the end results.\nbecomes\nsolving the output equation for formula_68 and substituting in the state equation results in\nThe advantage of this is that the &lt;a href=\"eigenvalues\"&gt;eigenvalues&lt;/a&gt; of \"A\" can be controlled by setting \"K\" appropriately through eigendecomposition of formula_71.\nThis assumes that the closed-loop system is &lt;a href=\"controllability\"&gt;controllable&lt;/a&gt; or that the unstable eigenvalues of \"A\" can be made stable through appropriate choice of \"K\".\nExample.\nFor a strictly proper system \"D\" equals zero. Another fairly common situation is when all states are outputs, i.e. \"y\" = \"x\", which yields \"C\" = \"I\", the &lt;a href=\"Identity%20matrix\"&gt;Identity matrix&lt;/a&gt;. This would then result in the simpler equations\nThis reduces the necessary eigendecomposition to just formula_74.\nFeedback with setpoint (reference) input.\nIn addition to feedback, an input, formula_75, can be added such that formula_76.\nbecomes\nsolving the output equation for formula_68 and substituting in the state equation \nresults in\nOne fairly common simplification to this system is removing \"D\", which reduces the equations to\nMoving object example.\nA classical linear system is that of one-dimensional movement of an object (e.g., a cart).\n&lt;a href=\"Newton%27s%20laws%20of%20motion\"&gt;Newton's laws of motion&lt;/a&gt; for an object moving horizontally on a plane and attached to a wall with a spring:\nwhere\nThe state equation would then become\nwhere\nThe &lt;a href=\"controllability\"&gt;controllability&lt;/a&gt; test is then\nwhich has full rank for all formula_91 and formula_93. This means, that if initial state of the system is known (formula_87, formula_88, formula_89), and if the formula_91 and formula_93 are constants, then there is a spring formula_29 that could move the cart into any other position in the system.\nThe &lt;a href=\"observability\"&gt;observability&lt;/a&gt; test is then\nwhich also has full rank. Therefore, this system is both controllable and observable.\nNonlinear systems.\nThe more general form of a state-space model can be written as two functions.\nThe first is the state equation and the latter is the output equation.\nIf the function formula_112 is a linear combination of states and inputs then the equations can be written in matrix notation like above.\nThe formula_90 argument to the functions can be dropped if the system is unforced (i.e., it has no inputs).\nPendulum example.\nA classic nonlinear system is a simple unforced &lt;a href=\"pendulum\"&gt;pendulum&lt;/a&gt;\nwhere\nThe state equations are then\nwhere\nInstead, the state equation can be written in the general form\nThe &lt;a href=\"Mechanical%20equilibrium\"&gt;equilibrium&lt;/a&gt;/&lt;a href=\"stationary%20point\"&gt;stationary point&lt;/a&gt;s of a system are when formula_127 and so the equilibrium points of a pendulum are those that satisfy\nfor integers \"n\"."
}