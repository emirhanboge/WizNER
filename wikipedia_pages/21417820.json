{
    "id": "21417820",
    "revid": "211905",
    "url": "https://en.wikipedia.org/wiki?curid=21417820",
    "title": "Correlation clustering",
    "text": "Clustering is the problem of partitioning data points into groups based on their similarity. Correlation clustering provides a method for clustering a set of objects into the optimum number of clusters without specifying that number in advance.\nDescription of the problem.\nIn &lt;a href=\"machine%20learning\"&gt;machine learning&lt;/a&gt;, correlation clustering or cluster editing operates in a scenario where the relationships between the objects are known instead of the actual representations of the objects. For example, given a &lt;a href=\"weighted%20graph\"&gt;weighted graph&lt;/a&gt; formula_1 where the edge weight indicates whether two nodes are similar (positive edge weight) or different (negative edge weight), the task is to find a clustering that either maximizes agreements (sum of positive edge weights within a cluster plus the absolute value of the sum of negative edge weights between clusters) or minimizes disagreements (absolute value of the sum of negative edge weights within a cluster plus the sum of positive edge weights across clusters). Unlike other clustering algorithms this does not require &lt;a href=\"Determining%20the%20number%20of%20clusters%20in%20a%20data%20set\"&gt;choosing the number of clusters&lt;/a&gt; formula_2 in advance because the objective, to minimize the sum of weights of the cut edges, is independent of the number of clusters.\nIt may not be possible to find a perfect clustering, where all similar items are in a cluster while all dissimilar ones are in different clusters. If the graph indeed admits a perfect clustering, then simply deleting all the negative edges and finding the connected components in the remaining graph will return the required clusters.\nBut, in general a graph may not have a perfect clustering. For example, given nodes \"a,b,c\" such that \"a,b\" and \"a,c\" are similar while \"b,c\" are dissimilar, a perfect clustering is not possible. In such cases, the task is to find a clustering that maximizes the number of agreements (number of + edges inside clusters plus the number of \u2212 edges between clusters) or minimizes the number of disagreements (the number of \u2212 edges inside clusters plus the number of + edges between clusters). This problem of maximizing the agreements is NP-complete (multiway cut problem reduces to maximizing weighted agreements and the problem of partitioning into triangles can be reduced to the unweighted version).\nAlgorithms.\nBansal et al. discuss the NP-completeness proof and also present both a constant factor approximation algorithm and &lt;a href=\"polynomial-time%20approximation%20scheme\"&gt;polynomial-time approximation scheme&lt;/a&gt; to find the clusters in this setting. Ailon et al. propose a randomized 3-&lt;a href=\"approximation%20algorithm\"&gt;approximation algorithm&lt;/a&gt; for the same problem.\n CC-Pivot(G=(V,E+,E\u2212))\n Pick random pivot i \u2208 V\n Set formula_3, V'=\u00d8\n For all j \u2208 V, j \u2260 i;\n If (i,j) \u2208 E+ then\n Add j to C\n Else (If (i,j) \u2208 E\u2212)\n Add j to V'\n Let G' be the subgraph induced by V'\n Return clustering C,CC-Pivot(G')\nThe authors show that the above algorithm is a 3-&lt;a href=\"approximation%20algorithm\"&gt;approximation algorithm&lt;/a&gt; for correlation clustering. The best polynomial-time approximation algorithm known at the moment for this problem achieves a ~2.06 approximation by rounding a linear program, as shown by &lt;a href=\"Shuchi%20Chawla\"&gt;Chawla&lt;/a&gt;, Makarychev, Schramm, and &lt;a href=\"Grigory%20Yaroslavtsev\"&gt;Yaroslavtsev&lt;/a&gt;.\nKarpinski and Schudy proved existence of a polynomial time approximation scheme (PTAS) for that problem on complete graphs and fixed number of clusters.\nOptimal number of clusters.\nIn 2011, it was shown by Bagon and Galun\nthat the optimization of the correlation clustering functional is closely related to well known &lt;a href=\"discrete%20optimization\"&gt;discrete optimization&lt;/a&gt; methods.\nIn their work they proposed a probabilistic analysis of the underlying implicit model that allows the correlation clustering functional to estimate the underlying number of clusters.\nThis analysis suggests the functional assumes a uniform prior over all possible partitions regardless of their number of clusters.\nThus, a non-uniform prior over the number of clusters emerges.\nSeveral discrete optimization algorithms are proposed in this work that scales gracefully with the number of elements (experiments show results with more than 100,000 variables).\nThe work of Bagon and Galun also evaluated the effectiveness of the recovery of the underlying number of clusters in several applications.\nCorrelation clustering (data mining).\nCorrelation clustering also relates to a different task, where &lt;a href=\"correlation\"&gt;correlation&lt;/a&gt;s among attributes of &lt;a href=\"feature%20vector\"&gt;feature vector&lt;/a&gt;s in a &lt;a href=\"high-dimensional%20space\"&gt;high-dimensional space&lt;/a&gt; are assumed to exist guiding the &lt;a href=\"cluster%20analysis\"&gt;clustering process&lt;/a&gt;. These correlations may be different in different clusters, thus a global &lt;a href=\"decorrelation\"&gt;decorrelation&lt;/a&gt; cannot reduce this to traditional (uncorrelated) clustering.\nCorrelations among subsets of attributes result in different spatial shapes of clusters. Hence, the similarity between cluster objects is defined by taking into account the local correlation patterns. With this notion, the term has been introduced in simultaneously with the notion discussed above.\nDifferent methods for correlation clustering of this type are discussed in and the relationship to different types of clustering is discussed in. See also &lt;a href=\"Clustering%20high-dimensional%20data\"&gt;Clustering high-dimensional data&lt;/a&gt;.\nCorrelation clustering (according to this definition) can be shown to be closely related to &lt;a href=\"biclustering\"&gt;biclustering&lt;/a&gt;. As in biclustering, the goal is to identify groups of objects that share a correlation in some of their attributes; where the correlation is usually typical for the individual clusters."
}