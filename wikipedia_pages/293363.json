{
    "id": "293363",
    "revid": "7903804",
    "url": "https://en.wikipedia.org/wiki?curid=293363",
    "title": "RSA SecurID",
    "text": "RSA SecurID, formerly referred to as SecurID, is a mechanism developed by &lt;a href=\"RSA%20Security\"&gt;RSA&lt;/a&gt; for performing &lt;a href=\"two-factor%20authentication\"&gt;two-factor authentication&lt;/a&gt; for a user to a network resource.\nDescription.\nThe RSA SecurID authentication mechanism consists of a \"&lt;a href=\"security%20token\"&gt;token&lt;/a&gt;\"\u2014either hardware (e.g. a &lt;a href=\"key%20fob\"&gt;key fob&lt;/a&gt;) or software (a &lt;a href=\"software%20token\"&gt;soft token&lt;/a&gt;)\u2014which is assigned to a computer user and which creates an authentication code at fixed intervals (usually 60 seconds) using a built-in clock and the card's factory-encoded almost random &lt;a href=\"Key%20%28cryptography%29\"&gt;key&lt;/a&gt; (known as the \"seed\"). The seed is different for each token, and is loaded into the corresponding RSA SecurID server (RSA Authentication Manager, formerly ACE/Server) as the tokens are purchased. On-demand tokens are also available, which provide a tokencode via email or SMS delivery, eliminating the need to provision a token to the user.\nThe token hardware is designed to be &lt;a href=\"tamper%20resistance\"&gt;tamper-resistant&lt;/a&gt; to deter &lt;a href=\"reverse%20engineering\"&gt;reverse engineering&lt;/a&gt;. When software implementations of the same algorithm (\"software tokens\") appeared on the market, public code had been developed by the security community allowing a user to emulate RSA SecurID in software, but only if they have access to a current RSA SecurID code, and the original 64-bit RSA SecurID seed file introduced to the server. Later, the 128-bit RSA SecurID algorithm was published as part of an open source library. In the RSA SecurID authentication scheme, the seed record is the secret key used to generate &lt;a href=\"one-time%20password\"&gt;one-time password&lt;/a&gt;s. Newer versions also feature a USB connector, which allows the token to be used as a &lt;a href=\"smart%20card\"&gt;smart card&lt;/a&gt;-like device for securely storing &lt;a href=\"Public%20key%20certificate\"&gt;certificates&lt;/a&gt;.\nA user authenticating to a network resource\u2014say, a dial-in server or a firewall\u2014needs to enter both a &lt;a href=\"personal%20identification%20number\"&gt;personal identification number&lt;/a&gt; and the number being displayed \"at that moment\" on their RSA SecurID token. Though increasingly rare, some systems using RSA SecurID disregard PIN implementation altogether, and rely on password/RSA SecurID code combinations. The server, which also has a real-time clock and a database of valid cards with the associated seed records, authenticates a user by computing what number the token is supposed to be showing at that moment in time and checking this against what the user entered.\nOn older versions of SecurID, a \"duress PIN\" may be used\u2014an alternate code which creates a security event log showing that a user was forced to enter their PIN, while still providing transparent authentication. Using the duress PIN would allow one successful authentication, after which the token will automatically be disabled. The \"duress PIN\" feature has been deprecated and is not available on currently supported versions.\nWhile the RSA SecurID system adds a layer of security to a network, difficulty can occur if the authentication server's clock becomes out of sync with the clock built into the authentication tokens. Normal token clock drift is accounted for automatically by the server by adjusting a stored \"drift\" value over time. If the out of sync condition is not a result of normal hardware token clock drift, correcting the synchronization of the Authentication Manager server clock with the out of sync token (or tokens) can be accomplished in several different ways. If the server clock had drifted and the administrator made a change to the system clock, the tokens can either be resynchronized one-by-one, or the stored drift values adjusted manually. The drift can be done on individual tokens or in bulk using a command line utility.\nRSA Security has pushed forth an initiative called \"Ubiquitous Authentication\", partnering with device manufacturers such as &lt;a href=\"IronKey\"&gt;IronKey&lt;/a&gt;, &lt;a href=\"SanDisk\"&gt;SanDisk&lt;/a&gt;, &lt;a href=\"Motorola\"&gt;Motorola&lt;/a&gt;, &lt;a href=\"Freescale%20Semiconductor\"&gt;Freescale Semiconductor&lt;/a&gt;, Redcannon, &lt;a href=\"Broadcom\"&gt;Broadcom&lt;/a&gt;, and &lt;a href=\"BlackBerry\"&gt;BlackBerry&lt;/a&gt; to embed the SecurID software into everyday devices such as USB flash drives and cell phones, to reduce cost and the number of objects that the user must carry.\nTheoretical vulnerabilities.\nToken codes are easily stolen, because no mutual-authentication exists (anything that can steal a password can also steal a token code). This is significant, since it is the principal threat most users believe they are solving with this technology.\nThe simplest practical vulnerability with any password container is losing the special key device or the activated smart phone with the integrated key function. Such vulnerability cannot be healed with any single token container device within the preset time span of activation. All further consideration presumes loss prevention, e.g. by additional electronic leash or body sensor and alarm.\nWhile RSA SecurID tokens offer a level of protection against password &lt;a href=\"replay%20attack\"&gt;replay attack&lt;/a&gt;s, they are not designed to offer protection against &lt;a href=\"Man-in-the-middle%20attack\"&gt;man in the middle&lt;/a&gt; type attacks when used alone. If the attacker manages to block the authorized user from authenticating to the server until the next token code will be valid, he will be able to log into the server. Risk-based analytics (RBA), a new feature in the latest version (8.0) provides significant protection against this type of attack if the user is enabled and authenticating on an agent enabled for RBA. RSA SecurID does not prevent &lt;a href=\"Man%20in%20the%20Browser\"&gt;man in the browser&lt;/a&gt; (MitB) based attacks.\nSecurID authentication server tries to prevent password sniffing and simultaneous login by declining both authentication requests, if two valid credentials are presented within a given time frame. This has been documented in an unverified post by John G. Brainard. If the attacker removes from the user the ability to authenticate however, the SecurID server will assume that it is the user who is actually authenticating and hence will allow the attacker's authentication through. Under this attack model, the system security can be improved using encryption/authentication mechanisms such as &lt;a href=\"Secure%20Sockets%20Layer\"&gt;SSL&lt;/a&gt;.\nAlthough soft tokens may be more convenient, critics indicate that the &lt;a href=\"tamper%20resistance\"&gt;tamper-resistant&lt;/a&gt; property of hard tokens is unmatched in soft token implementations, which could allow seed record secret keys to be duplicated and user impersonation to occur.\nHard tokens, on the other hand, can be physically stolen (or acquired via &lt;a href=\"Social%20engineering%20%28security%29\"&gt;social engineering&lt;/a&gt;) from end users. The small form factor makes hard token theft much more viable than laptop/desktop scanning. A user will typically wait more than one day before reporting the device as missing, giving the attacker plenty of time to breach the unprotected system. This could only occur, however, if the users UserID and PIN are also known. Risk-based analytics can provide additional protection against the use of lost or stolen tokens, even if the users UserID and PIN are known by the attackers.\nBatteries go flat periodically, requiring complicated replacement and re-enrollment procedures.\nReception and competing products.\nAs of 2003, RSA SecurID commanded over 70% of the two-factor authentication market and 25 million devices have been produced to date. A number of competitors, such as &lt;a href=\"VASCO%20Data%20Security%20International%2C%20Inc.\"&gt;VASCO&lt;/a&gt;, make similar &lt;a href=\"security%20token\"&gt;security token&lt;/a&gt;s, mostly based on the open &lt;a href=\"Initiative%20For%20Open%20Authentication\"&gt;OATH HOTP&lt;/a&gt; standard. A study on OTP published by &lt;a href=\"Gartner\"&gt;Gartner&lt;/a&gt; in 2010 mentions OATH and SecurID as the only competitors.\nOther network authentication systems, such as &lt;a href=\"OPIE%20Authentication%20System\"&gt;OPIE&lt;/a&gt; and &lt;a href=\"S/Key\"&gt;S/Key&lt;/a&gt; (sometimes more generally known as &lt;a href=\"One-time%20password\"&gt;OTP&lt;/a&gt;, as S/Key is a trademark of &lt;a href=\"Telcordia%20Technologies\"&gt;Telcordia Technologies&lt;/a&gt;, formerly &lt;a href=\"Bellcore\"&gt;Bellcore&lt;/a&gt;) attempt to provide the \"something you have\" level of authentication without requiring a hardware token.\nMarch 2011 system compromise.\nOn 17 March 2011, RSA announced that they had been victims of \"an extremely sophisticated cyber attack\". Concerns were raised specifically in reference to the SecurID system, saying that \"this information could potentially be used to reduce the effectiveness of a current two-factor authentication implementation\". However, their formal &lt;a href=\"Form%208-K\"&gt;Form 8-K&lt;/a&gt; submission indicated that they did not believe the breach would have a \"material impact on its financial results\". The breach cost EMC, the parent company of RSA, $66.3 million, which was taken as a charge against second quarter earnings. It covered costs to investigate the attack, harden its IT systems and monitor transactions of corporate customers, according to EMC Executive Vice President and Chief Financial Officer David Goulden, in a conference call with analysts.\nThe breach into RSA's network was carried out by hackers who sent &lt;a href=\"phishing\"&gt;phishing&lt;/a&gt; emails to two targeted, small groups of employees of RSA. Attached to the email was a &lt;a href=\"Microsoft%20Excel\"&gt;Microsoft Excel&lt;/a&gt; file containing &lt;a href=\"malware\"&gt;malware&lt;/a&gt;. When an RSA employee opened the Excel file, the malware exploited a vulnerability in &lt;a href=\"Adobe%20Flash\"&gt;Adobe Flash&lt;/a&gt;. The &lt;a href=\"Exploit%20%28computer%20security%29\"&gt;exploit&lt;/a&gt; allowed the hackers to use the &lt;a href=\"PoisonIvy%20%28Trojan%29\"&gt;Poison Ivy&lt;/a&gt; &lt;a href=\"remote%20access%20trojan\"&gt;RAT&lt;/a&gt; to gain control of machines and access servers in RSA's network.\nThere are some hints that the breach involved the theft of RSA's database mapping token serial numbers to the secret token \"seeds\" that were injected to make each one unique. Reports of RSA executives telling customers to \"ensure that they protect the serial numbers on their tokens\" lend credibility to this hypothesis.\nBarring a fatal weakness in the cryptographic implementation of the token code generation algorithm (which is unlikely, since it involves the simple and direct application of the extensively scrutinized &lt;a href=\"AES-128\"&gt;AES-128&lt;/a&gt; &lt;a href=\"block%20cipher\"&gt;block cipher&lt;/a&gt; ), the only circumstance under which an attacker could mount a successful attack without physical possession of the token is if the token seed records themselves had been leaked. RSA stated it did not release details about the extent of the attack so as to not give potential attackers information they could use in figuring out how to attack the system.\nOn 6 June 2011, RSA offered token replacements or free security monitoring services to any of its more than 30,000 SecurID customers, following an attempted cyber breach on defense customer &lt;a href=\"Lockheed%20Martin\"&gt;Lockheed Martin&lt;/a&gt; that appeared to be related to the SecurID information stolen from RSA. In spite of the resulting attack on one of its defense customers, company chairman Art Coviello said that \"We believe and still believe that the customers are protected\".\nResulting attacks.\nIn April 2011, unconfirmed rumors cited &lt;a href=\"L-3%20Communications\"&gt;L-3 Communications&lt;/a&gt; as having been attacked as a result of the RSA compromise.\nIn May 2011, this information was used to attack &lt;a href=\"Lockheed%20Martin\"&gt;Lockheed Martin&lt;/a&gt; systems. However Lockheed Martin claims that due to \"aggressive actions\" by the company's information security team, \"No customer, program or employee personal data\" was compromised by this \"significant and tenacious attack\". The &lt;a href=\"Department%20of%20Homeland%20Security\"&gt;Department of Homeland Security&lt;/a&gt; and the &lt;a href=\"US%20Defense%20Department\"&gt;US Defense Department&lt;/a&gt; offered help to determine the scope of the attack."
}