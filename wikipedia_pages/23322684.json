{
    "id": "23322684",
    "revid": "24711691",
    "url": "https://en.wikipedia.org/wiki?curid=23322684",
    "title": "Speaker diarisation",
    "text": "Speaker diarisation (&lt;a href=\"American%20and%20British%20English%20spelling%20differences%23-ise.2C%20-ize%20.28-isation.2C%20-ization.29\"&gt;or&lt;/a&gt; diarization) is the process of partitioning an input audio stream into homogeneous segments according to the speaker identity. It can enhance the readability of an &lt;a href=\"Speech%20recognition\"&gt;automatic speech transcription&lt;/a&gt; by structuring the audio stream into speaker turns and, when used together with &lt;a href=\"speaker%20recognition\"&gt;speaker recognition&lt;/a&gt; systems, by providing the speaker\u2019s true identity. It is used to answer the question \"who spoke when?\"\nSpeaker diarisation is a combination of speaker segmentation and speaker clustering. The first aims at finding speaker change points in an audio stream. The second aims at grouping together speech segments on the basis of speaker characteristics.\nWith the increasing number of broadcasts, meeting recordings and voice mail collected every year, speaker diarisation has received much attention by the speech community, as is manifested by the specific evaluations devoted to it under the auspices of the &lt;a href=\"National%20Institute%20of%20Standards%20and%20Technology\"&gt;National Institute of Standards and Technology&lt;/a&gt; for telephone speech, broadcast news and meetings.\nMain types of diarisation systems.\nIn speaker diarisation one of the most popular methods is to use a &lt;a href=\"Mixture%20model\"&gt;Gaussian mixture model&lt;/a&gt; to model each of the speakers, and assign the corresponding frames for each speaker with the help of a &lt;a href=\"Hidden%20Markov%20Model\"&gt;Hidden Markov Model&lt;/a&gt;. There are two main kinds of clustering scenario. The first one is by far the most popular and is called Bottom-Up. The algorithm starts in splitting the full audio content in a succession of clusters and progressively tries to merge the redundant clusters in order to reach a situation where each cluster corresponds to a real speaker. The second clustering strategy is called &lt;a href=\"http%3A//www.eurecom.fr/util/publidownload.fr.htm%3Fid%3D3000\"&gt;top-down&lt;/a&gt; and starts with one single cluster for all the audio data and tries to split it iteratively until reaching a number of clusters equal to the number of speakers.\nA 2010 review can be found at &lt;a href=\"http%3A//www.icsi.berkeley.edu/~fractor/papers/friedland_146.pdf\"&gt;&lt;/a&gt;\nOpen source speaker diarisation software.\nThere are some open source initiatives for speaker diarisation:"
}