{
    "id": "2577565",
    "revid": "21479757",
    "url": "https://en.wikipedia.org/wiki?curid=2577565",
    "title": "Java Portlet Specification",
    "text": "The Java Portlet Specification defines a &lt;a href=\"design%20by%20contract\"&gt;contract&lt;/a&gt; between the portlet container and portlets and provides a convenient programming model for Java portlet developers.\nPortlets are &lt;a href=\"Pluggable%20look%20and%20feel\"&gt;pluggable&lt;/a&gt; &lt;a href=\"user%20interface\"&gt;user interface&lt;/a&gt; &lt;a href=\"software%20component\"&gt;software component&lt;/a&gt;s that are managed and displayed in a &lt;a href=\"web%20portal\"&gt;web portal&lt;/a&gt;, for example an &lt;a href=\"enterprise%20portal\"&gt;enterprise portal&lt;/a&gt; or a &lt;a href=\"web%20CMS\"&gt;web CMS&lt;/a&gt;. A portlet can &lt;a href=\"Web%20aggregator%20%28disambiguation%29\"&gt;aggregate&lt;/a&gt; (integrate) and personalize content from different sources within a web page. A portlet responds to requests from a web client with and generates dynamic content.\nPortlets produce fragments of &lt;a href=\"markup%20language\"&gt;markup&lt;/a&gt; (&lt;a href=\"HTML\"&gt;HTML&lt;/a&gt;, &lt;a href=\"XHTML\"&gt;XHTML&lt;/a&gt;, &lt;a href=\"wireless%20markup%20language\"&gt;WML&lt;/a&gt;) that are aggregated into a portal. Typically, following the &lt;a href=\"desktop%20metaphor\"&gt;desktop metaphor&lt;/a&gt;, a portal page is displayed as a collection of non-overlapping portlet windows, where each portlet window displays a portlet. Hence a portlet (or collection of portlets) resembles a &lt;a href=\"web-based%20application\"&gt;web-based application&lt;/a&gt; that is hosted in a &lt;a href=\"Web%20portal\"&gt;portal&lt;/a&gt;.\nSome examples of portlet applications are &lt;a href=\"e-mail\"&gt;e-mail&lt;/a&gt;, &lt;a href=\"weather%20forecasting\"&gt;weather reports&lt;/a&gt;, &lt;a href=\"discussion%20forum\"&gt;discussion forum&lt;/a&gt;s, and &lt;a href=\"news\"&gt;news&lt;/a&gt;.\nA portlet is managed by a &lt;a href=\"portlet%20container\"&gt;portlet container&lt;/a&gt;. Portlet standards platform independent &lt;a href=\"application%20programming%20interface\"&gt;application programming interface&lt;/a&gt;s that are intended to enable &lt;a href=\"software%20developer\"&gt;software developer&lt;/a&gt;s to create portlets that can be &lt;a href=\"plug-in%20%28computing%29\"&gt;plugged into&lt;/a&gt; any portal supporting the standards. An example is the Java Portlet Specification. A Java portlet resembles a Java &lt;a href=\"Servlet\"&gt;Servlet&lt;/a&gt;, but produces fragments rather than complete documents, and is not bound by a URL.\nA portlet container runs &lt;a href=\"portlet\"&gt;portlet&lt;/a&gt;s and provides them with the required runtime environment. A portlet container contains portlets and manages their life cycles. It also provides persistent storage mechanisms for the portlet preferences. A portlet container receives requests from the portal to execute requests on the portlets hosted by it. A portlet container is not responsible for aggregating the content produced by the portlets; the portal itself handles aggregation. A portal and a portlet container can be built together as a single component of an application suite or as two separate components of a portal application.\nJSR 168.\nThe Java Portlet Specification V1.0 was developed under the &lt;a href=\"Java%20Community%20Process\"&gt;Java Community Process&lt;/a&gt; as Java Specification Request JSR 168, and released in its final form in October 2003.\nThe Java Portlet Specification V1.0 introduces the basic portlet programming model with:\nPortlet Catalog.\nInitially Java portal vendors had their own portlet development framework thus those portlets were confined to specific portal servers and couldn't be deployed to the rest of the Java portals. After JSR 168 inception, Java portlets may be deployed on any Java portal servers adhering to JSR 168 specifications.\nA Portlets Catalog is a set of portlets that are ready-to-use components for enterprise portals. For those who want to adopt portals certainly need many and variety of portlets to deploy and run. Here Portlets catalog are of use.\nA JSR 168 portlets catalog makes sure that portlets under this catalog may run on any standards\u2013compliant Java portal server. Types of portlet solution (vertical domains and technology) like collaboration, social networking, community, content management, utility, calendaring, HRM all are available in these catalogs.\nThere are many open source and commercial Portlets Catalog available but JSR 168 based solutions are rare.\nJSR 168 specifications offer suitability to the developers to reuse the code to maintain a set of JSR 168 compliant portlets. For deployers, it's easy to keep a single set of solution and deploy it on many.\nJSR 286.\nJSR-286 is the Java Portlet specification v2.0 as developed under the &lt;a href=\"Java%20Community%20Process\"&gt;JCP&lt;/a&gt; and created in alignment with the updated version 2.0 of &lt;a href=\"Web%20Services%20for%20Remote%20Portlets\"&gt;WSRP&lt;/a&gt;. It was released in June 2008. It was developed to improve on the short-comings of the version 1.0 specification, JSR-168. Some of its major features include:\nJSR 362.\nJSR-362 is the Java Portlet specification v3.0 and was released in April 2017. Some of its major features include:\nExternal links.\n "
}