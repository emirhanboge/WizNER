{
    "id": "4516638",
    "revid": "40311879",
    "url": "https://en.wikipedia.org/wiki?curid=4516638",
    "title": "Polling (computer science)",
    "text": "Polling, or polled operation, in &lt;a href=\"computer%20science\"&gt;computer science&lt;/a&gt;, refers to actively sampling the status of an &lt;a href=\"external%20device\"&gt;external device&lt;/a&gt; by a &lt;a href=\"client%20program\"&gt;client program&lt;/a&gt; as a synchronous activity. Polling is most often used in terms of &lt;a href=\"input/output\"&gt;input/output&lt;/a&gt; (), and is also referred to as polled or software-driven .\nDescription.\nPolling is the process where the computer or controlling device waits for an &lt;a href=\"external%20device\"&gt;external device&lt;/a&gt; to check for its readiness or state, often with low-level hardware. For example, when a &lt;a href=\"printer%20%28computing%29\"&gt;printer&lt;/a&gt; is connected via a parallel port, the computer waits until the printer has received the next character. These processes can be as minute as only reading &lt;a href=\"status%20register\"&gt;one bit&lt;/a&gt;. This is sometimes used synonymously with '&lt;a href=\"busy%20waiting\"&gt;busy-wait&lt;/a&gt;' polling. In this situation, when an operation is required, the computer does nothing other than check the status of the device until it is ready, at which point the device is accessed. In other words, the computer waits until the device is ready. Polling also refers to the situation where a device is repeatedly checked for readiness, and if it is not, the computer returns to a different task. Although not as wasteful of &lt;a href=\"CPU\"&gt;CPU&lt;/a&gt; cycles as busy waiting, this is generally not as efficient as the alternative to polling, &lt;a href=\"interrupt\"&gt;interrupt&lt;/a&gt;-driven .\nIn a simple single-purpose system, even busy-wait is perfectly appropriate if no action is possible until the access, but more often than not this was traditionally a consequence of simple hardware or non-&lt;a href=\"Computer%20multitasking\"&gt;multitasking&lt;/a&gt; &lt;a href=\"operating%20systems\"&gt;operating systems&lt;/a&gt;.\nPolling is often intimately involved with very &lt;a href=\"machine%20code\"&gt;low-level hardware&lt;/a&gt;. For example, polling a parallel printer port to check whether it is ready for another character involves examining as little as one &lt;a href=\"bit\"&gt;bit&lt;/a&gt; of a &lt;a href=\"byte\"&gt;byte&lt;/a&gt;. That bit represents, at the time of reading, whether a single wire in the printer cable is at low or high voltage. The instruction that reads this byte directly transfers the voltage state of eight real world wires to the eight circuits (&lt;a href=\"flip%20flop%20%28electronics%29\"&gt;flip flop&lt;/a&gt;s) that make up one byte of a CPU register.\nPolling has the disadvantage that if there are too many devices to check, the time required to poll them can exceed the time available to service the I/O device.\nAlgorithm.\nPolling can be described in the following steps:\nHost actions:\nController actions:\nTypes.\nA polling cycle is the time in which each element is monitored once. The optimal polling cycle will vary according to several factors, including the desired speed of response and the overhead (e.g., &lt;a href=\"Scheduling%20%28computing%29\"&gt;processor time&lt;/a&gt; and &lt;a href=\"Bandwidth%20%28computing%29\"&gt;bandwidth&lt;/a&gt;) of the polling.\nIn roll call polling, the polling device or process queries each element on a list in a fixed sequence. Because it waits for a response from each element, a timing mechanism is necessary to prevent lock-ups caused by non-responding elements. Roll call polling can be inefficient if the overhead for the polling messages is high, there are numerous elements to be polled in each polling cycle and only a few elements are active.\nIn \"hub polling\", also referred to as token polling, each element polls the next element in some fixed sequence. This continues until the first element is reached, at which time the polling cycle starts all over again.\nPolling can be employed in various computing contexts in order to control the execution or transmission sequence of the elements involved. For example, in multitasking operating systems, polling can be used to allocate processor time and other resources to the various competing processes.\nIn networks, polling is used to determine which nodes want to access the network. It is also used by routing protocols to retrieve routing information, as is the case with EGP (&lt;a href=\"exterior%20gateway%20protocol\"&gt;exterior gateway protocol&lt;/a&gt;).\nAn alternative to polling is the use of &lt;a href=\"interrupt\"&gt;interrupt&lt;/a&gt;s, which are signals generated by devices or processes to indicate that they need attention, want to communicate, etc. Although polling can be very simple, in many situations (e.g., multitasking operating systems) it is more efficient to use interrupts because it can reduce processor usage and/or bandwidth consumption.\nPoll message.\nA poll message is a control-acknowledgment message.\nIn a multidrop line arrangement (a central &lt;a href=\"computer\"&gt;computer&lt;/a&gt; and different terminals in which the &lt;a href=\"Terminal%20%28telecommunication%29\"&gt;terminal&lt;/a&gt;s share a single communication line to and from the computer), the system uses a &lt;a href=\"Master/slave%20%28technology%29\"&gt;master/slave&lt;/a&gt; polling arrangement whereby the central computer sends message (called polling message) to a specific terminal on the outgoing line. All terminals listen to the outgoing line, but only the terminal that is polled replies by sending any information that it has ready for transmission on the incoming line.\nIn &lt;a href=\"star%20network\"&gt;star network&lt;/a&gt;s, which, in its simplest form, consists of one central &lt;a href=\"Network%20switch\"&gt;switch&lt;/a&gt;, &lt;a href=\"Ethernet%20hub\"&gt;hub&lt;/a&gt;, or computer that acts as a conduit to transmit messages, polling is not required to avoid chaos on the lines, but it is often used to allow the master to acquire input in an orderly fashion. These poll messages differ from those of the multidrop lines case because there are no site addresses needed, and each terminal only receives those polls that are directed to it."
}