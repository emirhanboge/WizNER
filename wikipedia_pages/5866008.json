{
    "id": "5866008",
    "revid": "196446",
    "url": "https://en.wikipedia.org/wiki?curid=5866008",
    "title": "Privilege revocation (computing)",
    "text": "Privilege revocation is the act of an &lt;a href=\"wikt%3Aentity\"&gt;entity&lt;/a&gt; giving up some, or all of, the &lt;a href=\"privilege%20%28computing%29\"&gt;privileges&lt;/a&gt; they possess, or some &lt;a href=\"authority\"&gt;authority&lt;/a&gt; taking those (privileged) rights away.\nInformation theory.\nHonoring the &lt;a href=\"Principle%20of%20least%20privilege\"&gt;Principle of least privilege&lt;/a&gt; at a granularity provided by the base system such as &lt;a href=\"Sandbox%20%28computer%20security%29\"&gt;sandbox&lt;/a&gt;ing of (to that point successful) attacks to an unprivileged user account helps in &lt;a href=\"Reliability%20engineering\"&gt;reliability&lt;/a&gt; of computing services provided by the system. As the chances of restarting such a process are better, and other services on the same machine aren't affected (or at least probably not as much as in the alternative case: i.e. a privileged process gone haywire instead).\nComputer security.\nIn &lt;a href=\"computing%20security\"&gt;computing security&lt;/a&gt; \"privilege revocation\" is a measure taken by a &lt;a href=\"Computer%20program\"&gt;program&lt;/a&gt; to protect the &lt;a href=\"System%20software\"&gt;system&lt;/a&gt; against misuse of itself.\nPrivilege revocation is a variant of &lt;a href=\"privilege%20separation\"&gt;privilege separation&lt;/a&gt; whereby the program terminates the privileged part immediately after it has served its purpose. If a program doesn't revoke privileges, it risks the &lt;a href=\"privilege%20escalation\"&gt;escalation of privileges&lt;/a&gt;.\nRevocation of privileges is a technique of &lt;a href=\"defensive%20programming\"&gt;defensive programming&lt;/a&gt;."
}