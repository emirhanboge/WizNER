{
    "id": "36320711",
    "revid": "20483999",
    "url": "https://en.wikipedia.org/wiki?curid=36320711",
    "title": "Google Cloud Messaging",
    "text": "Google Cloud Messaging (GCM) was a mobile &lt;a href=\"notification%20service\"&gt;notification service&lt;/a&gt; developed by &lt;a href=\"Google\"&gt;Google&lt;/a&gt; that enables third-party application developers to send notification data or information from developer-run servers to applications that target the &lt;a href=\"Android%20%28operating%20system%29\"&gt;Google Android&lt;/a&gt; Operating System, as well as applications or extensions developed for the &lt;a href=\"Chrome%20%28browser%29\"&gt;Google Chrome&lt;/a&gt; internet browser. It was available to developers free of charge. The GCM Service was first announced in June 2012 as a successor to Google's now-defunct &lt;a href=\"Android%20Cloud%20to%20Device%20Messaging\"&gt;Android Cloud to Device Messaging&lt;/a&gt; (C2DM) service, citing improvements to authentication and delivery, new API endpoints and messaging parameters, and the removal of limitations on API send-rates and message sizes. It has been superseded by Google's &lt;a href=\"Firebase%20Cloud%20Messaging\"&gt;Firebase Cloud Messaging&lt;/a&gt; (FCM) on May 29, 2019.\nDevelopment.\nGCM first launched as Google's &lt;a href=\"Android%20Cloud%20to%20Device%20Messaging\"&gt;Android Cloud to Device Messaging&lt;/a&gt; (C2DM) service, first featured in &lt;a href=\"Android%20version%20history%232.2\"&gt;Android 2.2&lt;/a&gt; by &lt;a href=\"Google\"&gt;Google&lt;/a&gt;.\nThe transition to Google Cloud Messaging was first announced when the Android service was unveiled on June 27, 2012, at &lt;a href=\"Google%20I/O%232012%20.28June%2027.E2.80.9329.2C%202012.29\"&gt;Google I/O&lt;/a&gt;. Shortly after announcing the Google Cloud Messaging service, Google published documentation to guide application developers with migrating from the C2DM and onto the new service. Migrating to the service required SDK and code changes, as well as a release of an application update to the publish repository (such as &lt;a href=\"Google%20Play\"&gt;Google Play&lt;/a&gt;) for downloading and updating.\nThe Chrome service was announced before Google I/O 2013 in a blog post titled 'Building efficient apps and extensions with push messaging.'\nAt &lt;a href=\"Google%20I/O\"&gt;I/O 2015&lt;/a&gt;, Google announced a new SDK and &lt;a href=\"iOS\"&gt;iOS&lt;/a&gt; support.\nTechnical details.\nGoogle Cloud Messaging functions using server &lt;a href=\"Application%20programming%20interface\"&gt;APIs&lt;/a&gt; and &lt;a href=\"Software%20development%20kit\"&gt;SDKs&lt;/a&gt;, both maintained by Google. The GCM has the ability to send &lt;a href=\"Push%20technology\"&gt;push notifications&lt;/a&gt;, deep-linking commands, and application data. Larger messages can be sent with up to 4 KB of &lt;a href=\"Payload%20%28computing%29\"&gt;payload&lt;/a&gt; data.\nUpon allowing the application permission to receive and display notifications, the client application sends a registration API request to the Google Cloud Messaging interface to begin the registration process. The GCM Service receives and acknowledges the request and responds by giving the device a \"GCM Registration ID\", a unique identifier that the developer later uses to send a notification to the individual device. The identifier is stored onto the device, and is typically sent to the developer's application server to be stored. The GCM Registration ID is a randomly-generated identifier that does not contain any personal or device information that could allow a developer to discover the personal identity of the user. When the developer wishes to send a notification event to a device, the process begins with an API POST request being sent to the GCM Authentication Service. The POST request includes the GCM Registration ID, priority, optional values and links, and the information that is to be displayed on the device upon its arrival. Upon successful verification of the GCM Registration ID and other credentials, an authentication token is returned. Both identifiers are then sent to the GCM Service to be enqueued and delivered to the device."
}