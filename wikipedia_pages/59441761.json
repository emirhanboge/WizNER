{
    "id": "59441761",
    "revid": "9929111",
    "url": "https://en.wikipedia.org/wiki?curid=59441761",
    "title": "Network synthesis",
    "text": "Network synthesis is a design technique for &lt;a href=\"linear%20circuit\"&gt;linear electrical circuits&lt;/a&gt;. Synthesis starts from a prescribed &lt;a href=\"electrical%20impedance\"&gt;impedance&lt;/a&gt; function of frequency or &lt;a href=\"frequency%20response\"&gt;frequency response&lt;/a&gt; and then determines the possible networks that will produce the required response. The technique is to be compared to &lt;a href=\"Network%20analysis%20%28electrical%20circuits%29\"&gt;network analysis&lt;/a&gt; in which the response (or other behaviour) of a given circuit is calculated. Prior to network synthesis, only network analysis was available, but this requires that one already knows what form of circuit is to be analysed. There is no guarantee that the chosen circuit will be the closest possible match to the desired response, nor that the circuit is the simplest possible. Network synthesis directly addresses both these issues. Network synthesis has historically been concerned with synthesising &lt;a href=\"Passivity%20%28engineering%29\"&gt;passive&lt;/a&gt; networks, but is not limited to such circuits.\nThe field was founded by &lt;a href=\"Wilhelm%20Cauer\"&gt;Wilhelm Cauer&lt;/a&gt; after reading &lt;a href=\"Ronald%20M.%20Foster\"&gt;Ronald M. Foster&lt;/a&gt;'s 1924 paper \"&lt;a href=\"Foster%27s%20reactance%20theorem\"&gt;A reactance theorem&lt;/a&gt;\". Foster's theorem provided a method of synthesising &lt;a href=\"LC%20circuit\"&gt;LC circuit&lt;/a&gt;s with arbitrary number of elements by a partial fraction expansion of the impedance function. Cauer extended Foster's method to &lt;a href=\"RC%20circuit\"&gt;RC&lt;/a&gt; and &lt;a href=\"RL%20circuit\"&gt;RL circuit&lt;/a&gt;s, found new synthesis methods, and methods that could synthesise a general &lt;a href=\"RLC%20circuit\"&gt;RLC circuit&lt;/a&gt;. Other important advances before &lt;a href=\"World%20War%20II\"&gt;World War II&lt;/a&gt; are due to &lt;a href=\"Otto%20Brune\"&gt;Otto Brune&lt;/a&gt; and &lt;a href=\"Sidney%20Darlington\"&gt;Sidney Darlington&lt;/a&gt;. In the 1940s &lt;a href=\"Raoul%20Bott\"&gt;Raoul Bott&lt;/a&gt; and &lt;a href=\"Richard%20Duffin\"&gt;Richard Duffin&lt;/a&gt; published a synthesis technique that did not require transformers in the general case (the elimination of which had been troubling researchers for some time). In the 1950s, a great deal of effort was put into the question of minimising the number of elements required in a synthesis, but with only limited success. Little was done in the field until the 2000s when the issue of minimisation again became an active area of research, but as of 2018, is still an unsolved problem.\nA primary application of network synthesis is the design of &lt;a href=\"network%20synthesis%20filters\"&gt;network synthesis filters&lt;/a&gt; but this is not its only application. Amongst others are &lt;a href=\"impedance%20matching\"&gt;impedance matching&lt;/a&gt; networks, &lt;a href=\"Analog%20delay%20line\"&gt;time-delay network&lt;/a&gt;s, &lt;a href=\"directional%20coupler\"&gt;directional coupler&lt;/a&gt;s, and &lt;a href=\"Equalization%20%28communications%29\"&gt;equalisation&lt;/a&gt;. In the 2000s, network synthesis began to be applied to mechanical systems as well as electrical, notably in &lt;a href=\"Formula%20One\"&gt;Formula One&lt;/a&gt; racing.\nOverview.\nNetwork synthesis is all about designing an electrical network that behaves in a prescribed way without any preconception of the network form. Typically, an &lt;a href=\"electrical%20impedance\"&gt;impedance&lt;/a&gt; is required to be synthesised using passive components. That is, a network consisting of &lt;a href=\"Electrical%20resistance\"&gt;resistance&lt;/a&gt;s (R), &lt;a href=\"inductance\"&gt;inductance&lt;/a&gt;s (L) and &lt;a href=\"capacitance\"&gt;capacitance&lt;/a&gt;s (C). Such networks always have an impedance, denoted formula_1, in the form of a &lt;a href=\"rational%20function\"&gt;rational function&lt;/a&gt; of the &lt;a href=\"complex%20frequency\"&gt;complex frequency&lt;/a&gt; variable \"s\". That is, the impedance is the ratio of two polynomials in \"s\".\nThere are three broad areas of study in network synthesis; approximating a requirement with a rational function, synthesising that function into a network, and determining equivalents of the synthesised network.\nApproximation.\nThe idealised prescribed function will rarely be capable of being exactly described by polynomials. It is therefore not possible to synthesise a network to exactly reproduce it. A simple, and common, example is the &lt;a href=\"brick-wall%20filter\"&gt;brick-wall filter&lt;/a&gt;. This is the ideal response of a &lt;a href=\"low-pass%20filter\"&gt;low-pass filter&lt;/a&gt; but its &lt;a href=\"piecewise%20continuous\"&gt;piecewise continuous&lt;/a&gt; response is impossible to represent with polynomials because of the discontinuities. To overcome this difficulty, a rational function is found that closely approximates the prescribed function using &lt;a href=\"approximation%20theory\"&gt;approximation theory&lt;/a&gt;. In general, the closer the approximation is required to be, the higher the degree of the polynomial and the more elements will be required in the network.\nThere are many polynomials and functions used in network synthesis for this purpose. The choice depends on which parameters of the prescribed function the designer wishes to optimise. One of the earliest used was &lt;a href=\"Butterworth%20polynomials\"&gt;Butterworth polynomials&lt;/a&gt; which results in a &lt;a href=\"maximally%20flat\"&gt;maximally flat&lt;/a&gt; response in the passband. A common choice is the &lt;a href=\"Chebyshev%20approximation\"&gt;Chebyshev approximation&lt;/a&gt; in which the designer specifies how much the passband response can deviate from the ideal in exchange for improvements in other parameters. Other approximations are available for optimising time delay, &lt;a href=\"impedance%20matching\"&gt;impedance matching&lt;/a&gt;, &lt;a href=\"roll-off\"&gt;roll-off&lt;/a&gt;, and many other requirements.\nRealisation.\nGiven a rational function, it is usually necessary to determine whether the function is realisable as a discrete passive network. All such networks are described by a rational function, but not all rational functions are realisable as a discrete passive network. Historically, network synthesis was concerned exclusively with such networks. Modern active components have made this limitation less relevant in many applications, but at the higher &lt;a href=\"radio%20frequency\"&gt;radio frequencies&lt;/a&gt; passive networks are still the technology of choice. There is a &lt;a href=\"positive-real%20function\"&gt;simple property&lt;/a&gt; of rational functions that predicts whether the function is realisable as a passive network. Once it is determined that a function is realisable, there a number of algorithms available that will synthesise a network from it.\nEquivalence.\nA network realisation from a rational function is not unique. The same function may realise many equivalent networks. \nIt is known that &lt;a href=\"affine%20transformation\"&gt;affine transformation&lt;/a&gt;s of the impedance matrix formed in &lt;a href=\"mesh%20analysis\"&gt;mesh analysis&lt;/a&gt; of a network are all impedance matrices of equivalent networks (further information at ). Other &lt;a href=\"Equivalent%20impedance%20transforms\"&gt;impedance transformations&lt;/a&gt; are known, but whether there are further &lt;a href=\"equivalence%20class\"&gt;equivalence class&lt;/a&gt;es that remain to be discovered is an open question.\nA major area of research in network synthesis has been to find the realisation which uses the minimum number of elements. This question has not been fully solved for the general case, but solutions are available for many networks with practical applications.\nHistory.\nThe field of network synthesis was founded by German mathematician and scientist &lt;a href=\"Wilhelm%20Cauer\"&gt;Wilhelm Cauer&lt;/a&gt; (1900\u20131945). The first hint towards a theory came from American mathematician &lt;a href=\"Ronald%20M.%20Foster\"&gt;Ronald M. Foster&lt;/a&gt; (1896\u20131998) when he published &lt;a href=\"Foster%27s%20reactance%20theorem\"&gt;\"A reactance theorem\"&lt;/a&gt; in 1924. Cauer immediately recognised the importance of this work and set about generalising and extending it. His thesis in 1926 was on \"The realisation of impedances of prescibed frequency dependence\" and is the beginning of the field. Cauer's most detailed work was done during &lt;a href=\"World%20War%20II\"&gt;World War II&lt;/a&gt;, but he was killed shortly before the end of the war. His work could not be widely published during the war, and it was not until 1958 that his family collected his papers and published them for the wider world. Meanwhile, progress had been made in the United States based on Cauer's pre-war publications and material captured during the war.\nEnglish self-taught mathematician and scientist &lt;a href=\"Oliver%20Heaviside\"&gt;Oliver Heaviside&lt;/a&gt; (1850\u20131925) was the first to show that the impedance of an RLC network was always a rational function of a frequency operator, but provided no method of realising a network from a rational function. Cauer found a necessary condition for a rational function to be realisable as a passive network. South African &lt;a href=\"Otto%20Brune\"&gt;Otto Brune&lt;/a&gt; (1901\u20131982) later coined the term &lt;a href=\"positive-real%20function\"&gt;positive-real function&lt;/a&gt; (PRF) for this condition. Cauer postulated that PRF was a &lt;a href=\"necessary%20and%20sufficient\"&gt;necessary and sufficient&lt;/a&gt; condition but could not prove it, and suggested it as a research project to Brune, who was his &lt;a href=\"grad%20student\"&gt;grad student&lt;/a&gt; in the United States at the time. Brune published the missing proof in his 1931 &lt;a href=\"doctoral%20thesis\"&gt;doctoral thesis&lt;/a&gt;.\nFoster's realisation was limited to LC networks and was in one of two forms; either a number of series &lt;a href=\"LC%20circuit\"&gt;LC circuit&lt;/a&gt;s in parallel, or a number of parallel LC circuits in series. Foster's method was to expand formula_1 into &lt;a href=\"partial%20fraction\"&gt;partial fraction&lt;/a&gt;s. Cauer showed that Foster's method could be extended to RL and RC networks. Cauer also found another method; expanding formula_1 as a &lt;a href=\"continued%20fraction\"&gt;continued fraction&lt;/a&gt; which results in a &lt;a href=\"ladder%20network\"&gt;ladder network&lt;/a&gt;, again in two possible forms. In general, a PRF will represent an RLC network; with all three kinds of element present the realisation is trickier. Both Cauer and Brune used &lt;a href=\"ideal%20transformer\"&gt;ideal transformer&lt;/a&gt;s in their realisations of RLC networks. Having to include transformers is undesirable in a practical implementation of a circuit.\nA method of realisation that did not require transformers was provided in 1949 by Hungarian-American mathematician &lt;a href=\"Raoul%20Bott\"&gt;Raoul Bott&lt;/a&gt; (1923\u20132005) and American physicist &lt;a href=\"Richard%20Duffin\"&gt;Richard Duffin&lt;/a&gt; (1909\u20131996). The Bott and Duffin method provides an expansion by repeated application of &lt;a href=\"Richards%27%20theorem\"&gt;Richards' theorem&lt;/a&gt;, a 1947 result due to American physicist and applied mathematician &lt;a href=\"Paul%20I.%20Richards\"&gt;Paul I. Richards&lt;/a&gt; (1923\u20131978). The resulting Bott-Duffin networks have limited practical use (at least for rational functionals of high &lt;a href=\"Degree%20of%20a%20polynomial\"&gt;degree&lt;/a&gt;) because the number of components required grows exponentially with the degree. A number of variations of the original Bott-Duffin method all reduce the number of elements in each section from six to five, but still with exponentially growing overall numbers. Papers achieving this include Pantell (1954), Reza (1954), Storer (1954) and Fialkow &amp; Gest (1955). As of 2010, there has been no further significant advance in synthesising rational functions.\nIn 1939, American electrical engineer &lt;a href=\"Sidney%20Darlington\"&gt;Sidney Darlington&lt;/a&gt; showed that any PRF can be realised as a &lt;a href=\"two-port%20network\"&gt;two-port network&lt;/a&gt; consisting only of L and C elements and terminated at its output with a &lt;a href=\"resistor\"&gt;resistor&lt;/a&gt;. That is, only one resistor is required in any network, the remaining components being lossless. The theorem was independently discovered by both Cauer and Giovanni Cocci. The corollary problem, to find a synthesis of PRFs using R and C elements with only one inductor, is an unsolved problem in network theory. Another unsolved problem is finding a proof of Darlington's conjecture (1955) that any RC 2-port with a common terminal can be realised as a series-parallel network. An important consideration in practical networks is to minimise the number of components, especially the wound components\u2014inductors and transformers. Despite great efforts being put into minimisation, no general theory of minimisation has ever been discovered as it has for the &lt;a href=\"Minimization%20of%20Boolean%20functions\"&gt;Boolean algebra of digital circuits&lt;/a&gt;.\nCauer used &lt;a href=\"elliptic%20rational%20functions\"&gt;elliptic rational functions&lt;/a&gt; to produce approximations to ideal filters. A special case of elliptic rational functions is the &lt;a href=\"Chebyshev%20polynomials\"&gt;Chebyshev polynomials&lt;/a&gt; due to &lt;a href=\"Pafnuty%20Chebyshev\"&gt;Pafnuty Chebyshev&lt;/a&gt; (1821\u20131894) and is an important part of &lt;a href=\"approximation%20theory\"&gt;approximation theory&lt;/a&gt;. Chebyshev polynomials are widely used to design filters. In 1930, British physicist &lt;a href=\"Stephen%20Butterworth\"&gt;Stephen Butterworth&lt;/a&gt; (1885\u20131958) designed the &lt;a href=\"Butterworth%20filter\"&gt;Butterworth filter&lt;/a&gt;, otherwise known as the maximally-flat filter, using &lt;a href=\"Butterworth%20polynomials\"&gt;Butterworth polynomials&lt;/a&gt;. Butterworth's work was entirely independent of Cauer, but it was later found that the Butterworth polynomials were a limiting case of the Chebyshev polynomials. Even earlier (1929) and again independently, American engineer and scientist &lt;a href=\"Edward%20Lawry%20Norton\"&gt;Edward Lawry Norton&lt;/a&gt; (1898\u20131983) designed a maximally-flat &lt;a href=\"mechanical%20filter\"&gt;mechanical filter&lt;/a&gt; with a response entirely analogous to Butterworth's electrical filter.\nIn the 2000s, interest in further developing network synthesis theory was given a boost when the theory started to be applied to large mechanical systems. The unsolved problem of minimisation is much more important in the mechanical domain than the electrical due to the size and cost of components. In 2017, researchers at the University of Cambridge, limiting themselves to considering &lt;a href=\"Rational%20function%23Degree\"&gt;biquadratic rational functions&lt;/a&gt;, determined that Bott-Duffin realisations of such functions for all series-parallel networks and most arbitrary networks had the minimum number of reactances (Hughes, 2017). They found this result surprising as it showed that the Bott-Duffin method was not quite so non-minimal as previously thought. This research partly centred on revisiting the \"Ladenheim Catalogue\". This is an enumeration of all distinct RLC networks with no more than two reactances and three resistances. Edward Ladenheim carried out this work in 1948 while a student of Foster. The relevance of the catalogue is that all these networks are realised by biquadratic functions.\nApplications.\nThe single most widely used application of network synthesis is in the design of &lt;a href=\"filter%20%28signal%20processing%29\"&gt;signal processing filters&lt;/a&gt;. The modern designs of such filters are almost always some form of &lt;a href=\"network%20synthesis%20filter\"&gt;network synthesis filter&lt;/a&gt;.\nAnother application is the design of &lt;a href=\"impedance%20matching\"&gt;impedance matching&lt;/a&gt; networks. Impedance matching at a single frequency requires only a trivial network\u2014usually one component. Impedance matching over a wide band, however, requires a more complex network, even in the case that the source and load resistances do not vary with frequency. Doing this with passive elements and without the use of transformers results in a filter-like design. Furthermore, if the load is not a pure &lt;a href=\"Electrical%20resistance\"&gt;resistance&lt;/a&gt; then it is only possible to achieve a perfect match at a number of discrete frequencies; the match over the band as a whole must be approximated. The designer first prescribes the frequency band over which the matching network is to operate, and then designs a &lt;a href=\"band-pass%20filter\"&gt;band-pass filter&lt;/a&gt; for that band. The only essential difference between a standard filter and a matching network is that the source and load impedances are not equal.\nThere are differences between filters and matching networks in which parameters are important. Unless the network has a dual function, the designer is not too concerned over the behaviour of the impedance matching network outside the &lt;a href=\"passband\"&gt;passband&lt;/a&gt;. It does not matter if the &lt;a href=\"transition%20band\"&gt;transition band&lt;/a&gt; is not very narrow, or that the &lt;a href=\"stopband\"&gt;stopband&lt;/a&gt; has poor &lt;a href=\"attenuation\"&gt;attenuation&lt;/a&gt;. In fact, trying to improve the &lt;a href=\"Bandwidth%20%28signal%20processing%29\"&gt;bandwidth&lt;/a&gt; beyond what is strictly necessary will detract from the accuracy of the impedance match. With a given number of elements in the network, narrowing the design bandwidth improves the matching and vice versa. The limitations of impedance matching networks were first investigated by American engineer and scientist &lt;a href=\"Hendrik%20Wade%20Bode\"&gt;Hendrik Wade Bode&lt;/a&gt; in 1945, and the principle that they must necessarily be filter-like was established by Italian-American computer scientist &lt;a href=\"Robert%20Fano\"&gt;Robert Fano&lt;/a&gt; in 1950. One parameter in the passband that is usually set for filters is the maximum &lt;a href=\"insertion%20loss\"&gt;insertion loss&lt;/a&gt;. For impedance matching networks, a better match can be obtained by also setting a minimum loss. That is, the gain never rises to unity at any point.\nTime-delay networks can be designed by network synthesis with filter-like structures. It is not possible to design a delay network that has a constant delay at all frequencies in a band. An approximation to this behaviour must be used limited to a prescribed bandwidth. The prescribed delay will occur at most at a finite number of spot frequencies. The &lt;a href=\"Bessel%20filter\"&gt;Bessel filter&lt;/a&gt; has maximally-flat time-delay.\nThe application of network synthesis is not limited to the electrical domain. It can be applied to systems in any energy domain that can be represented as a network of linear components. In particular, network synthesis has found applications in &lt;a href=\"mechanical%20network\"&gt;mechanical network&lt;/a&gt;s in the mechanical domain. Consideration of mechanical network synthesis led &lt;a href=\"Malcolm%20C.%20Smith\"&gt;Malcolm C. Smith&lt;/a&gt; to propose a new mechanical network element, the &lt;a href=\"Inerter%20%28mechanical%20networks%29\"&gt;inerter&lt;/a&gt;, which is analogous to the electrical capacitor. Mechanical components with the inertance property have found an application in the suspensions of &lt;a href=\"Formula%20One\"&gt;Formula One&lt;/a&gt; racing cars.\nSynthesis techniques.\nSynthesis begins by choosing an approximation technique that delivers a &lt;a href=\"rational%20function\"&gt;rational function&lt;/a&gt; approximating the required function of the network. If the function is to be implemented with passive components, the function must also meet the conditions of a &lt;a href=\"positive-real%20function\"&gt;positive-real function&lt;/a&gt; (PRF). The synthesis technique used depends in part on what form of network is desired, and in part how many kinds of elements are needed in the network. A one-element-kind network is a trivial case, reducing to an impedance of a single element. A two-element-kind network (LC, RC, or RL) can be synthesised with Foster or Cauer synthesis. A three-element-kind network (an RLC network) requires more advanced treatment such as Brune or Bott-Duffin synthesis.\nWhich, and how many kinds of, elements are required can be determined by examining the &lt;a href=\"poles%20and%20zeroes\"&gt;poles and zeroes&lt;/a&gt; (collectively called critical frequencies) of the function. The requirement on the critical frequencies is given for each kind of network in the relevant sections below.\nFoster synthesis.\nFoster's synthesis, in its original form, can be applied only to LC networks. A PRF represents a two-element-kind LC network if the critical frequencies of formula_1 all exist on the formula_5 axis of the complex plane of formula_6 (the &lt;a href=\"s-plane\"&gt;\"s\"-plane&lt;/a&gt;) and will alternate between poles and zeroes. There must be a single critical frequency at the origin and at infinity, all the rest must be in &lt;a href=\"conjugate%20pair\"&gt;conjugate pair&lt;/a&gt;s. formula_1 must be the ratio of an even and odd polynomial and their degrees must differ by exactly one. These requirements are a consequence of &lt;a href=\"Foster%27s%20reactance%20theorem\"&gt;Foster's reactance theorem&lt;/a&gt;.\nFoster I form.\nFoster's first form (Foster I form) synthesises formula_1 as a set of parallel LC circuits in series. For example,\ncan be expanded into partial fractions as,\nThe first term represents a series inductor, a consequence of formula_1 having a pole at infinity. If it had had a pole at the origin, that would represent a series capacitor. The remaining two terms each represent conjugate pairs of poles on the formula_5 axis. Each of these terms can be synthesised as a parallel LC circuit by comparison with the impedance expression for such a circuit,\nThe resulting circuit is shown in the figure.\nFoster II form.\nFoster II form synthesises formula_1 as a set of series LC circuits in parallel. The same method of expanding into partial fractions is used as for Foster I form, but applied to the &lt;a href=\"admittance\"&gt;admittance&lt;/a&gt;, formula_15, instead of formula_1. Using the same example PRF as before,\nExpanded in partial fractions,\nThe first term represents a shunt inductor, a consequence of formula_15 having a pole at the origin (or, equivalently, formula_1 has a zero at the origin). If it had had a pole at infinity, that would represent a shunt capacitor. The remaining two terms each represent conjugate pairs of poles on the formula_5 axis. Each of these terms can be synthesised as a series LC circuit by comparison with the admittance expression for such a circuit,\nThe resulting circuit is shown in the figure.\nExtension to RC or RL networks.\nFoster synthesis can be extended to any two-element-kind network. For instance, the partial fraction terms of an RC network in Foster I form will each represent an R and C element in parallel. In this case, the partial fractions will be of the form,\nOther forms and element kinds follow by analogy. As with an LC network, The PRF can be tested to see if it is an RC or RL network by examining the critical frequencies. The critical frequencies must all be on the negative real axis and alternate between poles and zeroes, and there must be an equal number of each. If the critical frequency nearest, or at, the origin is a pole, then the PRF is an RC network if it represents a formula_1, or it is an RL network if it represents a formula_15. Vice versa if the critical frequency nearest, or at, the origin is a zero. These extensions of the theory also apply to the Cauer forms described below.\nImmittance.\nIn the Foster synthesis above, the expansion of the function is the same procedure in both the Foster I form and Foster II form. It is convenient, especially in theoretical works, to treat them together as an &lt;a href=\"immittance\"&gt;immittance&lt;/a&gt; rather than separately as either an impedance or an admittance. It is only necessary to declare whether the function represents an impedance or an admittance at the point that an actual circuit needs to be realised. Immittance can also be used in the same way with the Cauer I and Cauer II forms and other procedures.\nCauer synthesis.\nCauer synthesis is an alternative synthesis to Foster synthesis and the conditions that a PRF must meet are exactly the same as Foster synthesis. Like Foster synthesis, there are two forms of Cauer synthesis, and both can be extended to RC and RL networks.\nCauer I form.\nThe Cauer I form expands formula_1 into a &lt;a href=\"continued%20fraction\"&gt;continued fraction&lt;/a&gt;. Using the same example as used for the Foster I form,\nor, in more compact notation,\nThe terms of this expansion can be directly implemented as the component values of a ladder network as shown in the figure. The given PRF may have a denominator that has a greater degree than the numerator. In such cases, the &lt;a href=\"multiplicative%20inverse\"&gt;multiplicative inverse&lt;/a&gt; of the function is expanded instead. That is, if the function represents formula_1, then formula_15 is expanded instead and vice versa.\nCauer II form.\nCauer II form expands formula_1 in exactly the same way as Cauer I form except that lowest degree term is extracted first in the continued fraction expansion rather than the highest degree term as is done in Cauer I form. The example used for the Cauer I form and the Foster forms when expanded as a Cauer II form results in some elements having negative values. This particular PRF, therefore, cannot be realised in passive components as a Cauer II form without the inclusion of transformers or &lt;a href=\"mutual%20inductance\"&gt;mutual inductance&lt;/a&gt;s.\nThe essential reason that the example formula_1 cannot be realised as a Cauer II form is that this form has a &lt;a href=\"high-pass%20filter\"&gt;high-pass&lt;/a&gt; topology. The first element extracted in the continued fraction is a series capacitor. This makes it impossible for the zero of formula_1 at the origin to be realised. The Cauer I form, on the other hand, has a &lt;a href=\"low-pass%20filter\"&gt;low-pass&lt;/a&gt; topology and naturally has a zero at the origin. However, the formula_15 of this function can be realised as a Cauer II form since the first element extracted is a shunt inductor. This gives a pole at the origin for formula_15, but that translates to the necessary zero at the origin for formula_1. The continued fraction expansion is,\nand the realised network is shown in the figure.\nBrune synthesis.\nThe Brune synthesis can synthesise any arbitrary PRF, so in general will result in a 3-element-kind (i.e. RLC) network. The poles and zeroes can lie anywhere in the left-hand half of the complex plane. The Brune method starts with some preliminary steps to eliminate critical frequencies on the imaginary axis as in the Foster method. These preliminary steps are sometimes called the \"Foster preamble\". There is then a cycle of steps to produce a &lt;a href=\"cascade%20connection\"&gt;cascade&lt;/a&gt; of Brune sections.\nRemoval of critical frequencies on the imaginary axis.\nPoles and zeroes on the formula_38 axis represent L and C elements that can be extracted from the PRF. Specifically,\nAfter these extractions, the remainder PRF has no critical frequencies on the imaginary axis and is known as a \"minimum &lt;a href=\"electrical%20reactance\"&gt;reactance&lt;/a&gt;, minimum &lt;a href=\"susceptance\"&gt;susceptance&lt;/a&gt; function\". Brune synthesis proper begins with such a function.\nBroad outline of method.\nThe essence of the Brune method is to create a conjugate pair of zeroes on the formula_5 axis by extracting the real and imaginary parts of the function at that frequency, and then extract the pair of zeroes as a resonant circuit. This is the first Brune section of the synthesised network. The resulting remainder is another minimum reactance function that is two degrees lower. The cycle is then repeated, each cycle producing one more Brune section of the final network until just a constant value (a resistance) remains. The Brune synthesis is canonical, that is, the number of elements in the final synthesised network is equal to the number of arbitrary coefficients in the impedance function. The number of elements in the synthesised circuit cannot therefore be reduced any further.\nRemoval of minimum resistance.\nA minimum reactance function will have a minimum real part, formula_44, at some frequency formula_45. This resistance can be extracted from the function leaving a remainder of another PRF called a \"minimum positive-real function\", or just \"minimum function\". For example, the minimum reactance function\nhas formula_47 and formula_48. The minimum function, formula_49, is therefore,\nRemoval of a negative inductance or capacitance.\nSince formula_51 has no real part, we can write,\nFor the example function,\nIn this case, formula_54 is negative, and we interpret it as the reactance of a negative-valued inductor, formula_55. Thus,\nafter substituting in the values of formula_45 and formula_59. This inductance is then extracted from formula_49, leaving another PRF, formula_61,\nThe reason for extracting a negative value is because formula_63 is a PRF, which it would not be if formula_55 were positive. This guarantees that formula_61 will also be PRF (because the sum of two PRFs is also PRF). For cases where formula_54 is a positive value, the admittance function is used instead and a negative capacitance is extracted. How these negative values are implemented is explained in a later section.\nRemoval of a conjugate pair of zeroes.\nBoth the real and imaginary parts of formula_67 have been removed in previous steps. This leaves a pair of zeroes in formula_61 at formula_69 as shown by factorising the example function;\nSince such a pair of zeroes represents a shunt resonant circuit, we extract it as a pair of poles from the admittance function,\nThe rightmost term is the extracted resonant circuit with formula_72 and formula_73. The network synthesised so far is shown in the figure.\nRemoval of a pole at infinity.\nformula_74 must have a pole at infinity, since one was created there by the extraction of a negative inductance. This pole can now be extracted as a positive inductance.\nThus formula_76 as shown in the figure.\nReplacing negative inductance with a transformer.\nThe negative inductance cannot be implemented directly with passive components. However, the \"tee\" of inductors can be &lt;a href=\"Inductance%23T-circuit\"&gt;converted into mutually coupled inductors&lt;/a&gt; which absorbs the negative inductance. With a &lt;a href=\"Inductance%23Coupling%20coefficient\"&gt;coupling coefficient&lt;/a&gt; of unity (tightly coupled) the mutual inductance, formula_77, in the example case is 2.0.\nRinse and repeat.\nIn general, formula_78 will be another minimum reactance function and the Brune cycle is then repeated to extract another Brune section In the example case, the original PRF was of degree 2, so after reducing it by two degrees, only a constant term is left which, trivially, synthesises as a resistance.\nPositive \"X\".\nIn step two of the cycle it was mentioned that a negative element value must be extracted in order to guarantee a PRF remainder. If formula_54 is positive, the element extracted must be a shunt capacitor instead of a series inductor if the element is to be negative. It is extracted from the admittance formula_80 instead of the impedance formula_49. The circuit topology arrived at in step four of the cycle is a &lt;a href=\"Topology%20%28electrical%20circuits%29%23Simple%20filter%20topologies\"&gt;\u03a0 (pi)&lt;/a&gt; of capacitors plus an inductor instead of a tee of inductors plus a capacitor. It can be shown that this \u03a0 of capacitors plus inductor is an equivalent circuit of the tee of inductors plus capacitor. Thus, it is permissible to extract a positive inductance and then proceed as though formula_61 were PRF, even though it is not. The correct result will still be arrived at and the remainder function will be PRF so can be fed into the next cycle.\nBott-Duffin synthesis.\nThe Bott-Duffin synthesis begins as with the Brune synthesis by removing all poles and zeroes on the formula_5 axis. Then &lt;a href=\"Richards%27%20theorem\"&gt;Richards' theorem&lt;/a&gt; is invoked, which states for,\nif formula_1 is a PRF then formula_86 is a PRF for all real, positive values of formula_87.\nMaking formula_1 the subject of the expression results in,\nAn example of one cycle of Bott-Duffin synthesis is shown in the figures. The four terms in this expression are, respectively, a PRF (formula_90 in the diagram), an inductance, formula_91, in parallel with it, another PRF (formula_92 in the diagram), and a capacitance, formula_93, in parallel with it. A pair of critical frequencies on the formula_5 axis is then extracted from each of the two new PRFs (details not given here) each realised as a resonant circuit. The two residual PRFs (formula_95 and formula_96 in the diagram) are each two degrees lower than formula_1. The same procedure is then repeatedly applied to the new PRFs generated until just a single element remains. Since the number of PRFs generated doubles with each cycle, the number of elements synthesised will grow exponentially. Although the Bott-Duffin method avoids the use of transformers and can be applied to any expression capable of realisation as a passive network, it has limited practical use due to the high component count required.\nBayard synthesis.\nBayard synthesis is a &lt;a href=\"state-space\"&gt;state-space&lt;/a&gt; synthesis method based on the &lt;a href=\"LU%20decomposition\"&gt;Gauss factorisation procedure&lt;/a&gt;. This method returns a synthesis using the minimum number of resistors and contains no &lt;a href=\"gyrator\"&gt;gyrator&lt;/a&gt;s. However, the method is non-canonical and will, in general, return a non-minimal number of reactance elements.\nDarlington synthesis.\nDarlington synthesis starts from a different perspective to the techniques discussed so far, which all start from a prescribed rational function and realise it as a &lt;a href=\"one-port\"&gt;one-port&lt;/a&gt; impedance. Darlington synthesis starts with a prescribed rational function that is the desired &lt;a href=\"transfer%20function\"&gt;transfer function&lt;/a&gt; of a &lt;a href=\"two-port%20network\"&gt;two-port network&lt;/a&gt;. Darlington showed that any PRF can be realised as a two-port network using only L and C elements with a single resistor terminating the output port. The Darlington and related methods are called the \"insertion loss method\". The method can be extended to multi-port networks with each port terminated with a single resistor.\nThe Darlington method, in general, will require transformers or coupled inductors. However, most common filter types can be constructed by the Darlington method without these undesirable features.\nActive and digital realisations.\nIf the requirement to use only passive elements is lifted, then the realisation can be greatly simplified. Amplifiers can be used to &lt;a href=\"buffer%20amplifier\"&gt;buffer&lt;/a&gt; the parts of the network from each other so that they do not interact. Each buffered cell can directly realise a pair of poles of the rational function. There is then no need for any kind of iterative expansion of the function. The first example of this kind of synthesis is due to &lt;a href=\"Stephen%20Butterworth\"&gt;Stephen Butterworth&lt;/a&gt; in 1930. The &lt;a href=\"Butterworth%20filter\"&gt;Butterworth filter&lt;/a&gt; he produced became a classic of filter design, but more frequently implemented with purely passive rather than active components. More generally applicable designs of this kind include the &lt;a href=\"Sallen%E2%80%93Key%20topology\"&gt;Sallen\u2013Key topology&lt;/a&gt; due to R. P. Sallen and E. L. Key in 1955 at &lt;a href=\"MIT%20Lincoln%20Laboratory\"&gt;MIT Lincoln Laboratory&lt;/a&gt;, and the &lt;a href=\"biquadratic%20filter\"&gt;biquadratic filter&lt;/a&gt;. Like the Darlington approach, Butterworth and Sallen-Key start with a prescribed transfer function rather than an impedance. A major practical advantage of active implementation is that it can avoid the use of wound components (transformers and inductors) altogether. These are undesirable for manufacturing reasons. Another feature of active designs is that they are not limited to PRFs.\nDigital realisations, like active circuits, are not limited to PRFs and can implement any rational function simply by programming it in. However, the function may not be stable. That is, it may lead to &lt;a href=\"Electronic%20oscillator\"&gt;oscillation&lt;/a&gt;. PRFs are guaranteed to be stable, but other functions may not be. The stability of a rational function can be determined by examining the poles and zeroes of the function and applying the &lt;a href=\"Nyquist%20stability%20criterion\"&gt;Nyquist stability criterion&lt;/a&gt;."
}