{
    "id": "374636",
    "revid": "11555324",
    "url": "https://en.wikipedia.org/wiki?curid=374636",
    "title": "Adobe ColdFusion",
    "text": "Adobe ColdFusion is a commercial &lt;a href=\"rapid%20application%20development\"&gt;rapid web-application development&lt;/a&gt; computing platform created by &lt;a href=\"Joseph%20J.%20Allaire\"&gt;J. J. Allaire&lt;/a&gt; in 1995. (The &lt;a href=\"programming%20language\"&gt;programming language&lt;/a&gt; used with that platform is also commonly called ColdFusion, though is more accurately known as &lt;a href=\"CFML\"&gt;CFML&lt;/a&gt;.) ColdFusion was originally designed to make it easier to connect simple &lt;a href=\"HTML\"&gt;HTML&lt;/a&gt; pages to a &lt;a href=\"database\"&gt;database&lt;/a&gt;. By version 2 (1996), it became a full platform that included an &lt;a href=\"Integrated%20development%20environment\"&gt;IDE&lt;/a&gt; in addition to a full &lt;a href=\"scripting%20language\"&gt;scripting language&lt;/a&gt;.\nOverview.\nOne of the distinguishing features of ColdFusion is its associated scripting language, &lt;a href=\"ColdFusion%20Markup%20Language\"&gt;ColdFusion Markup Language&lt;/a&gt; (CFML). CFML compares to the scripting components of &lt;a href=\"Active%20Server%20Pages\"&gt;ASP&lt;/a&gt;, &lt;a href=\"JavaServer%20Pages\"&gt;JSP&lt;/a&gt;, and &lt;a href=\"PHP\"&gt;PHP&lt;/a&gt; in purpose and features, but its tag syntax more closely resembles &lt;a href=\"HTML\"&gt;HTML&lt;/a&gt;, while its script syntax resembles &lt;a href=\"JavaScript\"&gt;JavaScript&lt;/a&gt;. \"ColdFusion\" is often used synonymously with \"&lt;a href=\"ColdFusion%20Markup%20Language\"&gt;CFML&lt;/a&gt;\", but there are &lt;a href=\"%23Alternative%20server%20environments\"&gt;additional CFML application servers&lt;/a&gt; besides ColdFusion, and ColdFusion supports programming languages other than CFML, such as server-side &lt;a href=\"Actionscript\"&gt;Actionscript&lt;/a&gt; and embedded scripts that can be written in a &lt;a href=\"JavaScript\"&gt;JavaScript&lt;/a&gt;-like language known as &lt;a href=\"CFScript\"&gt;CFScript&lt;/a&gt;.\nOriginally a product of &lt;a href=\"Allaire%20Corporation\"&gt;Allaire&lt;/a&gt; and released on July 2, 1995, ColdFusion was developed by brothers &lt;a href=\"Joseph%20J.%20Allaire\"&gt;Joseph J. Allaire&lt;/a&gt; and &lt;a href=\"Jeremy%20Allaire\"&gt;Jeremy Allaire&lt;/a&gt;. In 2001 &lt;a href=\"Allaire%20Corporation\"&gt;Allaire&lt;/a&gt; was acquired by &lt;a href=\"Macromedia\"&gt;Macromedia&lt;/a&gt;, which in turn was acquired by &lt;a href=\"Adobe%20Systems\"&gt;Adobe Systems&lt;/a&gt; Inc in 2005.\nColdFusion is most often used for data-driven &lt;a href=\"website\"&gt;website&lt;/a&gt;s or &lt;a href=\"intranet\"&gt;intranet&lt;/a&gt;s, but can also be used to generate remote services such as &lt;a href=\"REST\"&gt;REST&lt;/a&gt; services, &lt;a href=\"WebSocket\"&gt;WebSocket&lt;/a&gt;s, &lt;a href=\"SOAP\"&gt;SOAP&lt;/a&gt; &lt;a href=\"web%20service\"&gt;web service&lt;/a&gt;s or &lt;a href=\"Adobe%20Flash\"&gt;Flash&lt;/a&gt; remoting. It is especially well-suited as the server-side technology to the client-side &lt;a href=\"ajax%20%28programming%29\"&gt;ajax&lt;/a&gt;.\nColdFusion can also handle asynchronous events such as &lt;a href=\"Short%20message%20service\"&gt;SMS&lt;/a&gt; and &lt;a href=\"instant%20messaging\"&gt;instant messaging&lt;/a&gt; via its gateway interface, available in ColdFusion MX 7 Enterprise Edition.\nMain features.\nColdFusion provides a number of additional features out of the box. Main features include:\nOther implementations of CFML offer similar or enhanced functionality, such as running in a &lt;a href=\".NET%20Framework\"&gt;.NET&lt;/a&gt; environment or image manipulation.\nThe engine was written in C and featured, among other things, a built-in scripting language (CFScript), plugin modules written in Java, and a syntax very similar to HTML. The equivalent to an HTML element, a ColdFusion tag begins with the letters \"CF\" followed by a name that is indicative of what the tag is interpreted to, in HTML. E.g. &lt;cfoutput&gt; to begin the output of variables or other content.\nIn addition to CFScript and plugins (as described), CFStudio provided a design platform with a &lt;a href=\"WYSIWYG\"&gt;WYSIWYG&lt;/a&gt; display. In addition to ColdFusion, CFStudio also supports syntax in other languages popular for backend programming, such as Perl. In addition to making backend functionality easily available to the non-programmer, (version 4.0 and forward in particular) integrated easily with the &lt;a href=\"Apache%20HTTP%20Server\"&gt;Apache Web Server&lt;/a&gt; and with &lt;a href=\"Internet%20Information%20Services\"&gt;Internet Information Services&lt;/a&gt;.\nOther features.\nAll versions of ColdFusion prior to 6.0 were written using Microsoft &lt;a href=\"Visual%20C%2B%2B\"&gt;Visual C++&lt;/a&gt;. This meant that ColdFusion was largely limited to running on &lt;a href=\"Microsoft%20Windows\"&gt;Microsoft Windows&lt;/a&gt;, although Allaire did successfully port ColdFusion to &lt;a href=\"Sun%20Microsystems\"&gt;Sun&lt;/a&gt; &lt;a href=\"Solaris%20%28operating%20system%29\"&gt;Solaris&lt;/a&gt; starting with version 3.1.\nThe &lt;a href=\"Allaire%20Corporation\"&gt;Allaire&lt;/a&gt; company was sold to &lt;a href=\"Macromedia\"&gt;Macromedia&lt;/a&gt;, then Macromedia was sold to &lt;a href=\"Adobe%20Systems\"&gt;Adobe&lt;/a&gt;. Earlier versions were not as robust as the versions available from version 4.0 forward.\nWith the release of ColdFusion MX 6.0, the engine had been re-written in &lt;a href=\"Java%20%28programming%20language%29\"&gt;Java&lt;/a&gt; and supported its own runtime environment, which was easily replaced through its configuration options with the runtime environment from Sun. Version 6.1 included the ability to code and debug &lt;a href=\"Adobe%20Flash\"&gt;Macromedia Flash&lt;/a&gt;.\nVersions.\nCold Fusion 3.\nVersion 3, released in June 1997, brought custom tags, cfsearch/cfindex/cfcollection based on the Verity search engine, the server scope, and template encoding (called then \"encryption\"). Version 3.1, released in Jan 1998, added RDS support as well as a port to the &lt;a href=\"Solaris%20%28operating%20system%29\"&gt;Sun Solaris&lt;/a&gt; operating system, while Cold Fusion studio gained a live page preview and HTML syntax checker.\nColdFusion 4.\nReleased in Nov 1998, version 4 is when the name was changed from \"Cold Fusion\" to \"ColdFusion\" - possibly to distinguish it from &lt;a href=\"Cold%20fusion\"&gt;Cold fusion&lt;/a&gt; theory. The release also added the initial implementation of cfscript, support for locking (cflock), transactions (cftransaction), hierarchical exception handling (cftry/cfcatch), sandbox security, as well as many new tags and functions, including cfstoredproc, cfcache, cfswitch, and more.\nColdFusion 4.5.\nVersion 4.5, released in Nov 1999, expanded the ability to access external system resources, including COM and CORBA, and added initial support for Java integration (including EJB's, Pojo's, servlets, and Java CFX's). IT also added the getmetricdata function (to access performance information), additional performance information in page debugging output, enhanced string conversion functions, and optional whitespace removal.\nColdFusion 5.\nVersion 5 was released in June 2001, adding enhanced query support, new reporting and charting features, user-defined functions, and improved admin tools. It was the last to be legacy coded for a specific platform, and the first release from &lt;a href=\"Macromedia\"&gt;Macromedia&lt;/a&gt; after their acquisition of &lt;a href=\"Allaire%20Corporation\"&gt;Allaire Corporation&lt;/a&gt;, which had been announced January 16, 2001.\nColdFusion MX 6.\nPrior to 2000, Edwin Smith, an Allaire architect on JRun and later the &lt;a href=\"Flash%20Player\"&gt;Flash Player&lt;/a&gt;, initiated a project codenamed \"Neo\". This project was later revealed as a ColdFusion Server re-written completely using &lt;a href=\"Java%20platform\"&gt;Java&lt;/a&gt;. This made portability easier and provided a layer of security on the server, because it ran inside a Java Runtime Environment.\nIn June 2002 Macromedia released the version 6.0 product under a slightly different name, ColdFusion MX, allowing the product to be associated with both the Macromedia brand and its original branding. ColdFusion MX was completely rebuilt from the ground up and was based on the &lt;a href=\"Java%20EE\"&gt;Java EE&lt;/a&gt; platform. ColdFusion MX was also designed to integrate well with Macromedia Flash using Flash Remoting.\nWith the release of ColdFusion MX, the CFML language API was released with an &lt;a href=\"Object-oriented%20programming\"&gt;OOP&lt;/a&gt; interface.\nColdFusion MX 7.\nWith the release of ColdFusion 7.0 on February 7, 2005, the naming convention was amended, rendering the product name \"Macromedia ColdFusion MX 7\" (the codename for CFMX7 was \"Blackstone\"). CFMX 7 added Flash-based and &lt;a href=\"XForms\"&gt;XForms&lt;/a&gt;-based web forms, and a report builder that output in &lt;a href=\"Adobe%20PDF\"&gt;Adobe PDF&lt;/a&gt; as well as &lt;a href=\"FlashPaper\"&gt;FlashPaper&lt;/a&gt;, &lt;a href=\"Rich%20Text%20Format\"&gt;RTF&lt;/a&gt; and &lt;a href=\"Microsoft%20Excel\"&gt;Excel&lt;/a&gt;. The Adobe PDF output is also available as a wrapper to any HTML page, converting that page to a quality printable document. The enterprise edition also added &lt;a href=\"Gateway%20%28computer%20networking%29\"&gt;Gateways&lt;/a&gt;. These provide interaction with non-HTTP request services such as IM Services, SMS, Directory Watchers, and an asynchronous execution. XML support was boosted in this version to include native schema checking.\nColdFusion MX 7.0.1 (codename \"Merrimack\") added support for &lt;a href=\"macOS\"&gt;Mac OS X&lt;/a&gt;, improvements to Flash forms, RTF support for CFReport, the new CFCPRoxy feature for Java/CFC integration, and more. ColdFusion MX 7.0.2 (codenamed \"Mystic\") included advanced features for working with Adobe Flex 2 as well as more improvements for the CF Report Builder.\nAdobe ColdFusion 8.\nOn July 30, 2007, &lt;a href=\"Adobe%20Systems\"&gt;Adobe Systems&lt;/a&gt; released ColdFusion 8, dropping \"MX\" from its name. During beta testing the codename used was \"Scorpio\" (the eighth sign of the zodiac and the eighth iteration of ColdFusion as a commercial product). More than 14,000 developers worldwide were active in the beta process - many more testers than the 5,000 &lt;a href=\"Adobe%20Systems\"&gt;Adobe Systems&lt;/a&gt; originally expected. The ColdFusion development team consisted of developers based in Newton/Boston, Massachusetts and offshore in Bangalore, India.\nSome of the new features are the CFPDFFORM tag, which enables integration with &lt;a href=\"Adobe%20Acrobat\"&gt;Adobe Acrobat&lt;/a&gt; forms, some image manipulation functions, &lt;a href=\"Microsoft%20.NET\"&gt;Microsoft .NET&lt;/a&gt; integration, and the CFPRESENTATION tag, which allows the creation of dynamic presentations using &lt;a href=\"Adobe%20Acrobat%20Connect\"&gt;Adobe Acrobat Connect&lt;/a&gt;, the Web-based collaboration solution formerly known as &lt;a href=\"Macromedia%20Breeze\"&gt;Macromedia Breeze&lt;/a&gt;. In addition, the ColdFusion Administrator for the Enterprise version ships with built-in server monitoring. ColdFusion 8 is available on several &lt;a href=\"operating%20systems\"&gt;operating systems&lt;/a&gt; including &lt;a href=\"Linux\"&gt;Linux&lt;/a&gt;, Mac OS X and &lt;a href=\"Windows%20Server%202003\"&gt;Windows Server 2003&lt;/a&gt;.\nOther additions to ColdFusion 8 are built-in &lt;a href=\"Ajax%20%28programming%29\"&gt;Ajax&lt;/a&gt; widgets, file archive manipulation (CFZIP), &lt;a href=\"Microsoft%20Exchange%20Server\"&gt;Microsoft Exchange server&lt;/a&gt; integration (CFEXCHANGE), image manipulation including automatic &lt;a href=\"CAPTCHA\"&gt;CAPTCHA&lt;/a&gt; generation (CFIMAGE), multi-threading, per-application settings, &lt;a href=\"Atom%20%28standard%29\"&gt;Atom&lt;/a&gt; and &lt;a href=\"RSS\"&gt;RSS&lt;/a&gt; feeds, reporting enhancements, stronger encryption libraries, array and structure improvements, improved database interaction, extensive performance improvements, PDF manipulation and merging capabilities (CFPDF), interactive debugging, embedded database support with &lt;a href=\"Apache%20Derby\"&gt;Apache Derby&lt;/a&gt;, and a more &lt;a href=\"ECMAScript\"&gt;ECMAScript&lt;/a&gt; compliant CFSCRIPT.\nFor development of ColdFusion applications, several tools are available: primarily &lt;a href=\"Adobe%20Dreamweaver\"&gt;Adobe Dreamweaver&lt;/a&gt; CS4, &lt;a href=\"Macromedia%20HomeSite\"&gt;Macromedia HomeSite&lt;/a&gt; 5.x, CFEclipse, &lt;a href=\"Eclipse%20%28software%29\"&gt;Eclipse&lt;/a&gt; and others. \"Tag updaters\" are available for these applications to update their support for the new ColdFusion 8 features.\nAdobe ColdFusion 9.\nColdFusion 9 (Codenamed: &lt;a href=\"Centaur\"&gt;Centaur&lt;/a&gt;) was released on October 5, 2009. New features for CF9 include:\nAdobe ColdFusion 10.\nColdFusion 10 (Codenamed: Zeus) was released on May 15, 2012. New or improved features available in all editions (Standard, Enterprise, and Developer) include (but are not limited to):\nAdditional new or improved features in ColdFusion Enterprise or Developer editions include (but are not limited to):\nThe lists above were obtained from the Adobe web site pages describing \"new features\", as listed first in the links in the following list.\nCF10 was originally referred to by the codename Zeus, after first being confirmed as coming by Adobe at &lt;a href=\"Adobe%20MAX\"&gt;Adobe MAX&lt;/a&gt; 2010, and during much of its prerelease period. It was also commonly referred to as \"ColdFusion next\" and \"ColdFusion X\" in blogs, on Twitter, etc., before Adobe finally confirmed it would be \"ColdFusion 10\". For much of 2010, ColdFusion Product Manager Adam Lehman toured the US setting up countless meetings with customers, developers, and user groups to formulate a master blueprint for the next feature set. In September 2010, he presented the plans to Adobe where they were given full support and approval by upper management.\nThe first public beta of ColdFusion 10 was released via Adobe Labs on 17 February 2012.\nAdobe ColdFusion 11.\nColdFusion 11 (Codenamed: Splendor) was released on April 29, 2014.\nNew or improved features available in all editions (Standard, Enterprise, and Developer) include:\nColdFusion 11 also removed many features previously identified simply as \"deprecated\" or no longer supported in earlier releases. For example, the CFLOG tag long offered date and time attributes which were deprecated (and redundant, as the date and time is always logged). As of CF11, their use would not cause the CFLOG tag to fail.\nAdobe ColdFusion (2016 release).\nAdobe ColdFusion (2016 release), Codenamed: Raijin (and also known generically as ColdFusion 2016) was released on February 16, 2016.\nNew or improved features available in all editions (Standard, Enterprise, and Developer) include:\nAdobe ColdFusion (2018 Release).\nAdobe ColdFusion (2018 release), known generically as ColdFusion 2018, was released on July 12, 2018. ColdFusion 2018 was codenamed Aether during prerelease.\nAs of July 2020, Adobe had released 10 updates for ColdFusion 2018.\nNew or improved features available in all editions (Standard, Enterprise, and Developer) include:\nAdobe ColdFusion (2021 Release).\nAdobe ColdFusion (2021 Release) was released on Nov 11th, 2020. ColdFusion 2021 was code named Project Stratus during pre-release.\nNew or improved features available in all editions (Standard, Enterprise, and Developer) include:\nDevelopment roadmap.\nIn Sep 2017, Adobe announced the roadmap anticipating releases in 2018 and 2020. Among the key features anticipated for the 2016 release were a new performance monitor, enhancements to asynchronous programming, revamped REST support, and enhancements to the API Manager, as well as support for CF2016 projected into 2024. As for the 2020 release, the features anticipated at that time (in 2017) were configurability (modularity) of CF application services, revamped scripting and object-oriented support, and further enhancements to the API Manager.\nFeatures.\nPDF generation.\nColdFusion can generate &lt;a href=\"PDF\"&gt;PDF&lt;/a&gt; documents using standard HTML (i.e. no additional coding is needed to generate documents for print). CFML authors place HTML and CSS within a pair of cfdocument tags (or new in ColdFusion 11, cfhtmltopdf tags). The generated document can then either be saved to disk or sent to the client's browser. ColdFusion 8 introduced also the cfpdf tag to allow for control over PDF documents including PDF forms, and merging of PDFs. These tags however do not use Adobe's PDF engine but cfdocument uses a combination of the commercial &lt;a href=\"JPedal\"&gt;JPedal&lt;/a&gt; Java PDF library and the free and open source Java library &lt;a href=\"iText\"&gt;iText&lt;/a&gt;, and cfhtmltopdf uses an embedded &lt;a href=\"WebKit\"&gt;WebKit&lt;/a&gt; implementation.\nColdFusion Components (Objects).\nColdFusion was originally not an &lt;a href=\"object-oriented%20programming%20language\"&gt;object-oriented programming language&lt;/a&gt; like &lt;a href=\"PHP\"&gt;PHP&lt;/a&gt; versions 3 and below. ColdFusion falls into the category of OO languages that do not support &lt;a href=\"multiple%20inheritance\"&gt;multiple inheritance&lt;/a&gt; (along with Java, Smalltalk, etc.). With the MX release (6+), ColdFusion introduced basic OO functionality with the \"component\" language construct which resembles classes in OO languages. Each \"component\" may contain any number of properties and methods. One component may also extend another (&lt;a href=\"Inheritance%20%28computer%20science%29\"&gt;Inheritance&lt;/a&gt;). Components only support single inheritance. Object handling feature set and performance enhancing has occurred with subsequent releases. With the release of ColdFusion 8, Java-style &lt;a href=\"interface%20%28programming%29\"&gt;interfaces&lt;/a&gt; are supported. ColdFusion components use the file extension \"cfc\" to differentiate them from ColdFusion templates (.cfm).\nRemoting.\nComponent methods may be made available as web services with no additional coding and configuration. All that is required is for a method's access to be declared 'remote'. ColdFusion automatically generates a &lt;a href=\"Web%20Services%20Description%20Language\"&gt;WSDL&lt;/a&gt; at the URL for the component in this manner: http://path/to/components/Component.cfc?wsdl. Aside from SOAP, the services are offered in Flash Remoting binary format.\nMethods which are declared remote may also be invoked via an HTTP GET or POST request. Consider the GET request as shown.\n&lt;br&gt;\n http://path/to/components/Component.cfc?method=search&amp;query=your+query&amp;mode=strict\nThis will invoke the component's search function, passing \"your query\" and \"strict\" as arguments.\nThis type of invocation is well-suited for &lt;a href=\"Ajax%20%28programming%29\"&gt;Ajax&lt;/a&gt;-enabled applications. ColdFusion 8 introduced the ability to serialize ColdFusion data structures to &lt;a href=\"JSON\"&gt;JSON&lt;/a&gt; for consumption on the client.\nThe ColdFusion server will automatically generate documentation for a component if you navigate to its URL and insert the appropriate code within the component's declarations. This is an application of component introspection, available to developers of ColdFusion components. Access to a component's documentation requires a password. A developer can view the documentation for all components known to the ColdFusion server by navigating to the ColdFusion URL. This interface resembles the &lt;a href=\"Javadoc\"&gt;Javadoc&lt;/a&gt; HTML documentation for Java classes.\nCustom Tags.\nColdFusion provides several ways to implement custom &lt;a href=\"markup%20language\"&gt;markup language&lt;/a&gt; tags, i.e. those not included in the core ColdFusion language. These are especially useful for providing a familiar interface for web designers and content authors familiar with HTML but not &lt;a href=\"imperative%20programming\"&gt;imperative programming&lt;/a&gt;.\nThe traditional and most common way is using CFML. A standard CFML page can be interpreted as a tag, with the tag name corresponding to the file name prefixed with \"cf_\". For example, the file IMAP.cfm can be used as the tag \"cf_imap\". Attributes used within the tag are available in the ATTRIBUTES scope of the tag implementation page. CFML pages are accessible in the same directory as the calling page, via a special directory in the ColdFusion web application, or via a CFIMPORT tag in the calling page. The latter method does not necessarily require the \"cf_\" prefix for the tag name.\nA second way is the developments of CFX tags using Java or C++. CFX tags are prefixed with \"cfx_\", for example \"cfx_imap\". Tags are added to the ColdFusion runtime environment using the ColdFusion administrator, where JAR or DLL files are registered as custom tags.\nFinally, ColdFusion supports JSP tag libraries from the JSP 2.0 language specification. JSP tags are included in CFML pages using the CFIMPORT tag.\nInteractions with other programming languages.\nColdFusion and Java.\nThe standard ColdFusion installation allows the deployment of ColdFusion as a &lt;a href=\"WAR%20%28Sun%20file%20format%29\"&gt;WAR file&lt;/a&gt; or &lt;a href=\"EAR%20%28file%20format%29\"&gt;EAR file&lt;/a&gt; for deployment to standalone application servers, such as &lt;a href=\"Macromedia%20JRun\"&gt;Macromedia JRun&lt;/a&gt;, and IBM &lt;a href=\"WebSphere\"&gt;WebSphere&lt;/a&gt;. ColdFusion can also be deployed to servlet containers such as &lt;a href=\"Apache%20Tomcat\"&gt;Apache Tomcat&lt;/a&gt; and &lt;a href=\"Jetty%20%28web%20server%29\"&gt;Mortbay Jetty&lt;/a&gt;, but because these platforms do not officially support ColdFusion, they leave many of its features inaccessible. As of ColdFusion 10 &lt;a href=\"Macromedia%20JRun\"&gt;Macromedia JRun&lt;/a&gt; was replaced by &lt;a href=\"Apache%20Tomcat\"&gt;Apache Tomcat&lt;/a&gt;.\nBecause ColdFusion is a Java EE application, ColdFusion code can be mixed with Java classes to create a variety of applications and use existing Java libraries. ColdFusion has access to all underlying Java classes, supports JSP custom tag libraries, and can access JSP functions after retrieving the JSP page context (\"GetPageContext()\").\nPrior to ColdFusion 7.0.1, ColdFusion components could only be used by Java or .NET by declaring them as web services. However, beginning in ColdFusion MX 7.0.1, ColdFusion components can now be used directly within Java classes using the CFCProxy class.\nRecently, there has been much interest in Java development using alternate languages such as &lt;a href=\"Jython\"&gt;Jython&lt;/a&gt;, &lt;a href=\"Groovy%20%28programming%20language%29\"&gt;Groovy&lt;/a&gt; and &lt;a href=\"JRuby\"&gt;JRuby&lt;/a&gt;. ColdFusion was one of the first scripting platforms to allow this style of Java development.\nColdFusion and .NET.\nColdFusion 8 natively supports &lt;a href=\".NET%20Framework\"&gt;.NET&lt;/a&gt; within the CFML syntax. ColdFusion developers can simply call any .NET assembly without needing to recompile or alter the assemblies in any way. Data types are automatically translated between ColdFusion and .NET (example: .NET DataTable \u2192 ColdFusion Query).\nA unique feature for a Java EE vendor, ColdFusion 8 offers the ability to access .NET Assemblies remotely through proxy (without the use of &lt;a href=\".NET%20Remoting\"&gt;.NET Remoting&lt;/a&gt;). This allows ColdFusion users to leverage .NET without having to be installed on a Windows operating system.\nAcronyms.\nThe &lt;a href=\"acronym\"&gt;acronym&lt;/a&gt; for the ColdFusion Markup Language is \"CFML\". When ColdFusion templates are saved to disk, they are traditionally given the extension .cfm or .cfml. The .cfc extension is used for ColdFusion Components. The original extension was DBM or DBML, which stood for Database Markup Language. When talking about ColdFusion, most users use the acronym CF and this is used for numerous ColdFusion resources such as user groups (CFUGs) and sites.\nCFMX is the common abbreviation for ColdFusion versions 6 and 7 (a.k.a. ColdFusion MX).\nAlternative server environments.\nColdFusion originated as proprietary technology based on Web technology industry standards. However, it is becoming a less closed technology through the availability of competing products. Such alternative products include (in alphabetical order):\nThe argument can be made that ColdFusion is even less platform-bound than raw Java EE or .NET, simply because ColdFusion will run on top of a .NET app server (New Atlanta), or on top of any servlet container or Java EE application server (&lt;a href=\"JRun\"&gt;JRun&lt;/a&gt;, &lt;a href=\"IBM%20WebSphere%20Application%20Server\"&gt;WebSphere&lt;/a&gt;, &lt;a href=\"JBoss\"&gt;JBoss&lt;/a&gt;, &lt;a href=\"Apache%20Geronimo\"&gt;Geronimo&lt;/a&gt;, &lt;a href=\"Apache%20Tomcat\"&gt;Tomcat&lt;/a&gt;, &lt;a href=\"Resin%20Server\"&gt;Resin Server&lt;/a&gt;, &lt;a href=\"Jetty%20%28web%20server%29\"&gt;Jetty (web server)&lt;/a&gt;, etc.). In theory, a ColdFusion application could be moved unchanged from a Java EE application server to a .NET application server.\nVulnerabilities.\nIn March 2013, a known issue affecting ColdFusion 8, 9 and 10 left the &lt;a href=\"National%20Vulnerability%20Database\"&gt;National Vulnerability Database&lt;/a&gt; open to attack. The vulnerability had been identified and a patch released by Adobe for CF9 and CF10 in January.\nIn April 2013, a ColdFusion vulnerability was blamed by &lt;a href=\"Linode\"&gt;Linode&lt;/a&gt; for an intrusion into the Linode Manager control panel website. A security bulletin and &lt;a href=\"hotfix\"&gt;hotfix&lt;/a&gt; for this had been issued by Adobe a week earlier.\nIn May 2013, Adobe identified another critical vulnerability, reportedly already being exploited in the wild, which targets all recent versions of ColdFusion on any servers where the web-based administrator and API have not been locked down. The vulnerability allows unauthorized users to upload malicious scripts and potentially gain full control over the server. A security bulletin and &lt;a href=\"hotfix\"&gt;hotfix&lt;/a&gt; for this was issued by Adobe 6 days later.\nIn April 2015, Adobe fixed a cross-site scripting (XSS) vulnerability\nin Adobe ColdFusion 10 before Update 16, and in ColdFusion 11 before Update 5,\nthat allowed remote attackers to inject arbitrary web script or HTML; however, it's exploitable only by users who have authenticated through the administration panel.\nIn September 2019, Adobe fixed two command injection vulnerabilities (CVE-2019-8073) that enabled arbitrary code and an alleyway traversal (CVE-2019-8074)."
}